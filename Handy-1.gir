<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gio" version="2.0"/>
  <include name="Gtk" version="3.0"/>
  <package name="libhandy-1"/>
  <c:include name="handy.h"/>
  <namespace name="Handy"
             version="1"
             shared-library="/nix/store/xkkn070ncn1rjkgva2fqgdmj6p63yxx1-libhandy-0.90.0/lib/libhandy-1.so.0"
             c:identifier-prefixes="Hdy"
             c:symbol-prefixes="hdy">
    <class name="ActionRow"
           c:symbol-prefix="action_row"
           c:type="HdyActionRow"
           parent="PreferencesRow"
           glib:type-name="HdyActionRow"
           glib:get-type="hdy_action_row_get_type"
           glib:type-struct="ActionRowClass">
      <source-position filename="../src/hdy-action-row.h" line="37"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_action_row_new"
                   version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="485">Creates a new #HdyActionRow.</doc>
        <source-position filename="../src/hdy-action-row.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-action-row.c"
               line="490">a new #HdyActionRow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <virtual-method name="activate" invoker="activate">
        <source-position filename="../src/hdy-action-row.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="activate" c:identifier="hdy_action_row_activate">
        <source-position filename="../src/hdy-action-row.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="add_prefix"
              c:identifier="hdy_action_row_add_prefix"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="744">Adds a prefix widget to @self.</doc>
        <source-position filename="../src/hdy-action-row.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="746">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="747">the prefix widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_activatable_widget"
              c:identifier="hdy_action_row_get_activatable_widget"
              version="0.0.7">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="607">Gets the widget activated when @self is activated.</doc>
        <source-position filename="../src/hdy-action-row.h" line="55"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-action-row.c"
               line="613">the widget activated when @self is
         activated, or %NULL if none has been set.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="609">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="hdy_action_row_get_icon_name"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="551">Gets the icon name for @self.</doc>
        <source-position filename="../src/hdy-action-row.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-action-row.c"
               line="557">the icon name for @self.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="553">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="hdy_action_row_get_subtitle"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="500">Gets the subtitle for @self.</doc>
        <source-position filename="../src/hdy-action-row.h" line="43"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-action-row.c"
               line="506">the subtitle for @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="502">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="hdy_action_row_get_use_underline"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="687">Gets whether an embedded underline in the text of the title and subtitle
labels indicates a mnemonic. See hdy_action_row_set_use_underline().</doc>
        <source-position filename="../src/hdy-action-row.h" line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-action-row.c"
               line="694">%TRUE if an embedded underline in the title and subtitle labels
         indicates the mnemonic accelerator keys.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="689">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_activatable_widget"
              c:identifier="hdy_action_row_set_activatable_widget"
              version="0.0.7">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="642">Sets the widget to activate when @self is activated, either by clicking
on it, by calling hdy_action_row_activate(), or via mnemonics in the title or
the subtitle. See the “use_underline” property to enable mnemonics.

The target widget will be activated by emitting the
GtkWidget::mnemonic-activate signal on it.</doc>
        <source-position filename="../src/hdy-action-row.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="644">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="645">the target #GtkWidget, or %NULL to unset</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_action_row_set_icon_name"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="576">Sets the icon name for @self.</doc>
        <source-position filename="../src/hdy-action-row.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="578">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="579">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="hdy_action_row_set_subtitle"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="522">Sets the subtitle for @self.</doc>
        <source-position filename="../src/hdy-action-row.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="524">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="525">the subtitle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="hdy_action_row_set_use_underline"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="711">If true, an underline in the text of the title and subtitle labels indicates
the next character should be used for the mnemonic accelerator key.</doc>
        <source-position filename="../src/hdy-action-row.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="713">a #HdyActionRow</doc>
            <type name="ActionRow" c:type="HdyActionRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-action-row.c"
                 line="714">%TRUE if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="activatable-widget"
                version="0.0.7"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="359">The activatable widget for this row.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="icon-name"
                version="0.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="345">The icon name for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subtitle"
                version="0.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="373">The subtitle for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-underline"
                version="0.0.6"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="387">Whether an embedded underline in the text of the title and subtitle labels
indicates a mnemonic.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="PreferencesRow" c:type="HdyPreferencesRow"/>
      </field>
      <glib:signal name="activated" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.c"
             line="404">This signal is emitted after the row has been activated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ActionRowClass"
            c:type="HdyActionRowClass"
            glib:is-gtype-struct-for="ActionRow">
      <source-position filename="../src/hdy-action-row.h" line="37"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-action-row.h"
             line="26">The parent class</doc>
        <type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
      </field>
      <field name="activate">
        <callback name="activate">
          <source-position filename="../src/hdy-action-row.h" line="33"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="ActionRow" c:type="HdyActionRow*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="ApplicationWindow"
           c:symbol-prefix="application_window"
           c:type="HdyApplicationWindow"
           parent="Gtk.ApplicationWindow"
           glib:type-name="HdyApplicationWindow"
           glib:get-type="hdy_application_window_get_type"
           glib:type-struct="ApplicationWindowClass">
      <source-position filename="../src/hdy-application-window.h" line="30"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gio.ActionGroup"/>
      <implements name="Gio.ActionMap"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_application_window_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-application-window.c"
             line="136">Creates a new #HdyApplicationWindow.</doc>
        <source-position filename="../src/hdy-application-window.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-application-window.c"
               line="141">a newly created #HdyApplicationWindow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="Gtk.ApplicationWindow" c:type="GtkApplicationWindow"/>
      </field>
    </class>
    <record name="ApplicationWindowClass"
            c:type="HdyApplicationWindowClass"
            glib:is-gtype-struct-for="ApplicationWindow">
      <source-position filename="../src/hdy-application-window.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.ApplicationWindowClass"
              c:type="GtkApplicationWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Avatar"
           c:symbol-prefix="avatar"
           c:type="HdyAvatar"
           parent="Gtk.DrawingArea"
           glib:type-name="HdyAvatar"
           glib:get-type="hdy_avatar_get_type"
           glib:type-struct="AvatarClass">
      <source-position filename="../src/hdy-avatar.h" line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_avatar_new">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="586">Creates a new #HdyAvatar.</doc>
        <source-position filename="../src/hdy-avatar.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-avatar.c"
               line="596">the newly created #HdyAvatar</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="588">The size of the avatar</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="589">The text used to generate the color and initials if
@show_initials is %TRUE. The color is selected at random if @text is empty.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="show_initials" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="591">whether to show the initials or the fallback icon on
top of the color generated based on @text.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_icon_name"
              c:identifier="hdy_avatar_get_icon_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="610">Gets the name of the icon in the icon theme to use when the icon should be
displayed.</doc>
        <source-position filename="../src/hdy-avatar.h" line="45"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-avatar.c"
               line="617">the name of the icon from the icon theme.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="612">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_initials"
              c:identifier="hdy_avatar_get_show_initials">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="706">Returns whether initials are used for the fallback or the icon.</doc>
        <source-position filename="../src/hdy-avatar.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-avatar.c"
               line="712">%TRUE if the initials are used for the fallback.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="708">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size" c:identifier="hdy_avatar_get_size">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="774">Returns the size of the avatar.</doc>
        <source-position filename="../src/hdy-avatar.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-avatar.c"
               line="780">the size of the avatar.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="776">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_text" c:identifier="hdy_avatar_get_text">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="662">Get the text used to generate the fallback initials and color</doc>
        <source-position filename="../src/hdy-avatar.h" line="50"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-avatar.c"
               line="668">returns the text used to generate
the fallback initials. This is the internal string used by
the #HdyAvatar, and must not be modified.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="664">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_avatar_set_icon_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="629">Sets the name of the icon in the icon theme to use when the icon should be
displayed.
If no name is set, the avatar-default-symbolic icon will be used.
If the name doesn't match a valid icon, it is an error and no icon will be
displayed.
If the icon theme is changed, the image will be updated automatically.</doc>
        <source-position filename="../src/hdy-avatar.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="631">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="632">the name of the icon from the icon theme</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_image_load_func"
              c:identifier="hdy_avatar_set_image_load_func">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="745">A callback which is called when the custom image need to be reloaded for some
reason (e.g. scale-factor changes).</doc>
        <source-position filename="../src/hdy-avatar.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="747">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="load_image"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="748">callback to set a custom image</doc>
            <type name="AvatarImageLoadFunc" c:type="HdyAvatarImageLoadFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="749">user data passed to @load_image</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="750">destroy notifier for @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_initials"
              c:identifier="hdy_avatar_set_show_initials">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="722">Sets whether the initials should be shown on the fallback avatar or the icon.</doc>
        <source-position filename="../src/hdy-avatar.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="724">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="show_initials" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="725">whether the initials should be shown on the fallback avatar
or the icon.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="hdy_avatar_set_size">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="790">Sets the size of the avatar.</doc>
        <source-position filename="../src/hdy-avatar.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="792">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="793">The size to be used for the avatar</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_text" c:identifier="hdy_avatar_set_text">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="680">Set the text used to generate the fallback initials color</doc>
        <source-position filename="../src/hdy-avatar.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="682">a #HdyAvatar</doc>
            <type name="Avatar" c:type="HdyAvatar*"/>
          </instance-parameter>
          <parameter name="text"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-avatar.c"
                 line="683">the text used to get the initials and color</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="icon-name"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="528">The name of the icon in the icon theme to use when the icon should be
displayed.
If no name is set, the avatar-default-symbolic icon will be used.
If the name doesn't match a valid icon, it is an error and no icon will be
displayed.
If the icon theme is changed, the image will be updated automatically.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-initials" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="size" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="516">The avatar size of the avatar.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="text" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.c"
             line="547">The text used for the initials and for generating the color.
If #HdyAvatar:show-initials is %FALSE it's only used to generate the color.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
    </class>
    <record name="AvatarClass"
            c:type="HdyAvatarClass"
            glib:is-gtype-struct-for="Avatar">
      <source-position filename="../src/hdy-avatar.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <callback name="AvatarImageLoadFunc" c:type="HdyAvatarImageLoadFunc">
      <doc xml:space="preserve"
           filename="../src/hdy-avatar.h"
           line="25">The returned #GdkPixbuf is expected to be square with width and height set
to @size. The image is cropped to a circle without any scaling or transformation.</doc>
      <source-position filename="../src/hdy-avatar.h" line="36"/>
      <return-value transfer-ownership="full" nullable="1">
        <doc xml:space="preserve"
             filename="../src/hdy-avatar.h"
             line="33">the #GdkPixbuf to use as a custom avatar
or %NULL to fallback to the generated avatar.</doc>
        <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
      </return-value>
      <parameters>
        <parameter name="size" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-avatar.h"
               line="27">the required size of the avatar</doc>
          <type name="gint" c:type="gint"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../src/hdy-avatar.h"
               line="28">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Carousel"
           c:symbol-prefix="carousel"
           c:type="HdyCarousel"
           parent="Gtk.EventBox"
           glib:type-name="HdyCarousel"
           glib:get-type="hdy_carousel_get_type"
           glib:type-struct="CarouselClass">
      <source-position filename="../src/hdy-carousel.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Swipeable"/>
      <constructor name="new" c:identifier="hdy_carousel_new" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="734">Create a new #HdyCarousel widget.</doc>
        <source-position filename="../src/hdy-carousel.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel.c"
               line="739">The newly created #HdyCarousel widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_allow_mouse_drag"
              c:identifier="hdy_carousel_get_allow_mouse_drag"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="1019">Sets whether @self can be dragged with mouse pointer</doc>
        <source-position filename="../src/hdy-carousel.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel.c"
               line="1025">%TRUE if @self can be dragged with mouse</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="1021">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_animation_duration"
              c:identifier="hdy_carousel_get_animation_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="978">Gets animation duration used by hdy_carousel_scroll_to().</doc>
        <source-position filename="../src/hdy-carousel.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel.c"
               line="984">Animation duration in milliseconds</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="980">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interactive"
              c:identifier="hdy_carousel_get_interactive"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="898">Gets whether @self can be navigated.</doc>
        <source-position filename="../src/hdy-carousel.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel.c"
               line="904">%TRUE if @self can be swiped</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="900">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_n_pages"
              c:identifier="hdy_carousel_get_n_pages"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="862">Gets the number of pages in @self.</doc>
        <source-position filename="../src/hdy-carousel.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel.c"
               line="868">The number of pages in @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="864">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_position"
              c:identifier="hdy_carousel_get_position"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="880">Gets current scroll position in @self. It's unitless, 1 matches 1 page.</doc>
        <source-position filename="../src/hdy-carousel.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel.c"
               line="886">The scroll position</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="882">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal_duration"
              c:identifier="hdy_carousel_get_reveal_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="1063">Gets duration of the animation used when adding or removing pages in
milliseconds.</doc>
        <source-position filename="../src/hdy-carousel.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel.c"
               line="1070">Page reveal duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="1065">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_spacing"
              c:identifier="hdy_carousel_get_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="942">Gets spacing between pages in pixels.</doc>
        <source-position filename="../src/hdy-carousel.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel.c"
               line="948">Spacing between pages</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="944">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="insert" c:identifier="hdy_carousel_insert" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="767">Inserts @child into @self at position @position.

If position is -1, or larger than the number of pages,
@child will be appended to the end.</doc>
        <source-position filename="../src/hdy-carousel.h" line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="769">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="770">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="771">the position to insert @child in.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="prepend" c:identifier="hdy_carousel_prepend" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="749">Prepends @child to @self</doc>
        <source-position filename="../src/hdy-carousel.h" line="28"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="751">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="752">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reorder" c:identifier="hdy_carousel_reorder" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="789">Moves @child into position @position.

If position is -1, or larger than the number of pages, @child will be moved
to the end.</doc>
        <source-position filename="../src/hdy-carousel.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="791">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="792">a widget to add</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="793">the position to move @child to.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="scroll_to"
              c:identifier="hdy_carousel_scroll_to"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="813">Scrolls to @widget position with an animation.
#HdyCarousel:animation-duration property can be used for controlling the
duration.</doc>
        <source-position filename="../src/hdy-carousel.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="815">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="816">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="scroll_to_full"
              c:identifier="hdy_carousel_scroll_to_full"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="833">Scrolls to @widget position with an animation.</doc>
        <source-position filename="../src/hdy-carousel.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="835">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="836">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="837">animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_allow_mouse_drag"
              c:identifier="hdy_carousel_set_allow_mouse_drag"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="1037">Sets whether @self can be dragged with mouse pointer. If @allow_mouse_drag
is %FALSE, dragging is only available on touch.</doc>
        <source-position filename="../src/hdy-carousel.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="1039">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="allow_mouse_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="1040">whether @self can be dragged with mouse pointer</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_animation_duration"
              c:identifier="hdy_carousel_set_animation_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="996">Sets animation duration used by hdy_carousel_scroll_to().</doc>
        <source-position filename="../src/hdy-carousel.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="998">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="999">animation duration in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interactive"
              c:identifier="hdy_carousel_set_interactive"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="916">Sets whether @self can be navigated. This can be used to temporarily disable
a #HdyCarousel to only allow swiping in a certain state.</doc>
        <source-position filename="../src/hdy-carousel.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="918">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="interactive" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="919">whether @self can be swiped.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal_duration"
              c:identifier="hdy_carousel_set_reveal_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="1082">Sets duration of the animation used when adding or removing pages in
milliseconds.</doc>
        <source-position filename="../src/hdy-carousel.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="1084">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="reveal_duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="1085">the new reveal duration value</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_spacing"
              c:identifier="hdy_carousel_set_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="960">Sets spacing between pages in pixels.</doc>
        <source-position filename="../src/hdy-carousel.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="962">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="963">the new spacing value</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-mouse-drag"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="644">Sets whether the #HdyCarousel can be dragged with mouse pointer. If the
value is %FALSE, dragging is only available on touch.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="animation-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="630">Animation duration in milliseconds, used by hdy_carousel_scroll_to().</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="interactive"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="599">Whether the carousel can be navigated. This can be used to temporarily
disable a #HdyCarousel to only allow navigating it in a certain state.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="n-pages" version="1.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="566">The number of pages in a #HdyCarousel</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="position" version="1.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="582">Current scrolling position, unitless. 1 matches 1 page. Use
hdy_carousel_scroll_to() for changing it.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </property>
      <property name="reveal-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="659">Page reveal duration in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="614">Spacing between pages in pixels.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <glib:signal name="page-changed" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel.c"
             line="681">This signal is emitted after a page has been changed. This can be used to
implement "infinite scrolling" by connecting to this signal and amending
the pages.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel.c"
                 line="684">Current page</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="CarouselClass"
            c:type="HdyCarouselClass"
            glib:is-gtype-struct-for="Carousel">
      <source-position filename="../src/hdy-carousel.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.EventBoxClass" c:type="GtkEventBoxClass"/>
      </field>
    </record>
    <class name="CarouselIndicatorDots"
           c:symbol-prefix="carousel_indicator_dots"
           c:type="HdyCarouselIndicatorDots"
           parent="Gtk.DrawingArea"
           glib:type-name="HdyCarouselIndicatorDots"
           glib:get-type="hdy_carousel_indicator_dots_get_type"
           glib:type-struct="CarouselIndicatorDotsClass">
      <source-position filename="../src/hdy-carousel-indicator-dots.h"
                       line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="hdy_carousel_indicator_dots_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel-indicator-dots.c"
             line="411">Create a new #HdyCarouselIndicatorDots widget.</doc>
        <source-position filename="../src/hdy-carousel-indicator-dots.h"
                         line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel-indicator-dots.c"
               line="416">The newly created #HdyCarouselIndicatorDots widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_carousel"
              c:identifier="hdy_carousel_indicator_dots_get_carousel"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel-indicator-dots.c"
             line="426">Get the #HdyCarousel the indicator uses.

See: hdy_carousel_indicator_dots_set_carousel()</doc>
        <source-position filename="../src/hdy-carousel-indicator-dots.h"
                         line="29"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel-indicator-dots.c"
               line="434">the #HdyCarousel, or %NULL if none has been set</doc>
          <type name="Carousel" c:type="HdyCarousel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel-indicator-dots.c"
                 line="428">a #HdyCarouselIndicatorDots</doc>
            <type name="CarouselIndicatorDots"
                  c:type="HdyCarouselIndicatorDots*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_carousel"
              c:identifier="hdy_carousel_indicator_dots_set_carousel"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel-indicator-dots.c"
             line="447">Sets the #HdyCarousel to use.</doc>
        <source-position filename="../src/hdy-carousel-indicator-dots.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel-indicator-dots.c"
                 line="449">a #HdyCarouselIndicatorDots</doc>
            <type name="CarouselIndicatorDots"
                  c:type="HdyCarouselIndicatorDots*"/>
          </instance-parameter>
          <parameter name="carousel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel-indicator-dots.c"
                 line="450">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </parameter>
        </parameters>
      </method>
      <property name="carousel"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel-indicator-dots.c"
             line="383">The #HdyCarousel the indicator uses.</doc>
        <type name="Carousel"/>
      </property>
    </class>
    <record name="CarouselIndicatorDotsClass"
            c:type="HdyCarouselIndicatorDotsClass"
            glib:is-gtype-struct-for="CarouselIndicatorDots">
      <source-position filename="../src/hdy-carousel-indicator-dots.h"
                       line="23"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <class name="CarouselIndicatorLines"
           c:symbol-prefix="carousel_indicator_lines"
           c:type="HdyCarouselIndicatorLines"
           parent="Gtk.DrawingArea"
           glib:type-name="HdyCarouselIndicatorLines"
           glib:get-type="hdy_carousel_indicator_lines_get_type"
           glib:type-struct="CarouselIndicatorLinesClass">
      <source-position filename="../src/hdy-carousel-indicator-lines.h"
                       line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="hdy_carousel_indicator_lines_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel-indicator-lines.c"
             line="410">Create a new #HdyCarouselIndicatorLines widget.</doc>
        <source-position filename="../src/hdy-carousel-indicator-lines.h"
                         line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel-indicator-lines.c"
               line="415">The newly created #HdyCarouselIndicatorLines widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_carousel"
              c:identifier="hdy_carousel_indicator_lines_get_carousel"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel-indicator-lines.c"
             line="425">Get the #HdyCarousel the indicator uses.

See: hdy_carousel_indicator_lines_set_carousel()</doc>
        <source-position filename="../src/hdy-carousel-indicator-lines.h"
                         line="29"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-carousel-indicator-lines.c"
               line="433">the #HdyCarousel, or %NULL if none has been set</doc>
          <type name="Carousel" c:type="HdyCarousel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel-indicator-lines.c"
                 line="427">a #HdyCarouselIndicatorLines</doc>
            <type name="CarouselIndicatorLines"
                  c:type="HdyCarouselIndicatorLines*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_carousel"
              c:identifier="hdy_carousel_indicator_lines_set_carousel"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel-indicator-lines.c"
             line="446">Sets the #HdyCarousel to use.</doc>
        <source-position filename="../src/hdy-carousel-indicator-lines.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel-indicator-lines.c"
                 line="448">a #HdyCarouselIndicatorLines</doc>
            <type name="CarouselIndicatorLines"
                  c:type="HdyCarouselIndicatorLines*"/>
          </instance-parameter>
          <parameter name="carousel"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-carousel-indicator-lines.c"
                 line="449">a #HdyCarousel</doc>
            <type name="Carousel" c:type="HdyCarousel*"/>
          </parameter>
        </parameters>
      </method>
      <property name="carousel"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-carousel-indicator-lines.c"
             line="382">The #HdyCarousel the indicator uses.</doc>
        <type name="Carousel"/>
      </property>
    </class>
    <record name="CarouselIndicatorLinesClass"
            c:type="HdyCarouselIndicatorLinesClass"
            glib:is-gtype-struct-for="CarouselIndicatorLines">
      <source-position filename="../src/hdy-carousel-indicator-lines.h"
                       line="23"/>
      <field name="parent_class">
        <type name="Gtk.DrawingAreaClass" c:type="GtkDrawingAreaClass"/>
      </field>
    </record>
    <enumeration name="CenteringPolicy"
                 glib:type-name="HdyCenteringPolicy"
                 glib:get-type="hdy_centering_policy_get_type"
                 c:type="HdyCenteringPolicy">
      <member name="loose"
              value="0"
              c:identifier="HDY_CENTERING_POLICY_LOOSE"
              glib:nick="loose">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="65">Keep the title centered when possible</doc>
      </member>
      <member name="strict"
              value="1"
              c:identifier="HDY_CENTERING_POLICY_STRICT"
              glib:nick="strict">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="66">Keep the title centered at all cost</doc>
      </member>
    </enumeration>
    <class name="Clamp"
           c:symbol-prefix="clamp"
           c:type="HdyClamp"
           parent="Gtk.Bin"
           glib:type-name="HdyClamp"
           glib:get-type="hdy_clamp_get_type"
           glib:type-struct="ClampClass">
      <source-position filename="../src/hdy-clamp.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="hdy_clamp_new" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-clamp.c"
             line="459">Creates a new #HdyClamp.</doc>
        <source-position filename="../src/hdy-clamp.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-clamp.c"
               line="464">a new #HdyClamp</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_maximum_size"
              c:identifier="hdy_clamp_get_maximum_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-clamp.c"
             line="474">Gets the maximum size to allocate to the contained child. It is the width if
@self is horizontal, or the height if it is vertical.</doc>
        <source-position filename="../src/hdy-clamp.h" line="27"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-clamp.c"
               line="481">the maximum width to allocate to the contained child.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-clamp.c"
                 line="476">a #HdyClamp</doc>
            <type name="Clamp" c:type="HdyClamp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_tightening_threshold"
              c:identifier="hdy_clamp_get_tightening_threshold"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-clamp.c"
             line="519">Gets the size starting from which the clamp will tighten its grip on the
child.</doc>
        <source-position filename="../src/hdy-clamp.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-clamp.c"
               line="526">the size starting from which the clamp will tighten its grip on the
child.</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-clamp.c"
                 line="521">a #HdyClamp</doc>
            <type name="Clamp" c:type="HdyClamp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_maximum_size"
              c:identifier="hdy_clamp_set_maximum_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-clamp.c"
             line="493">Sets the maximum size to allocate to the contained child. It is the width if
@self is horizontal, or the height if it is vertical.</doc>
        <source-position filename="../src/hdy-clamp.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-clamp.c"
                 line="495">a #HdyClamp</doc>
            <type name="Clamp" c:type="HdyClamp*"/>
          </instance-parameter>
          <parameter name="maximum_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-clamp.c"
                 line="496">the maximum size</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tightening_threshold"
              c:identifier="hdy_clamp_set_tightening_threshold"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-clamp.c"
             line="539">Sets the size starting from which the clamp will tighten its grip on the
child.</doc>
        <source-position filename="../src/hdy-clamp.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-clamp.c"
                 line="541">a #HdyClamp</doc>
            <type name="Clamp" c:type="HdyClamp*"/>
          </instance-parameter>
          <parameter name="tightening_threshold" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-clamp.c"
                 line="542">the tightening threshold</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="maximum-size"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-clamp.c"
             line="407">The maximum size to allocate to the child. It is the width if the clamp is
horizontal, or the height if it is vertical.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="tightening-threshold"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-clamp.c"
             line="422">The size starting from which the clamp will tighten its grip on the child,
slowly allocating less and less of the available size up to the maximum
allocated size. Below that threshold and below the maximum width, the child
will be allocated all the available size.

If the threshold is greater than the maximum size to allocate to the child,
the child will be allocated all the width up to the maximum.
If the threshold is lower than the minimum size to allocate to the child,
that size will be used as the tightening threshold.

Effectively, tightening the grip on the child before it reaches its maximum
size makes transitions to and from the maximum size smoother when resizing.</doc>
        <type name="gint" c:type="gint"/>
      </property>
    </class>
    <record name="ClampClass"
            c:type="HdyClampClass"
            glib:is-gtype-struct-for="Clamp">
      <source-position filename="../src/hdy-clamp.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <class name="ComboRow"
           c:symbol-prefix="combo_row"
           c:type="HdyComboRow"
           parent="ActionRow"
           glib:type-name="HdyComboRow"
           glib:get-type="hdy_combo_row_get_type"
           glib:type-struct="ComboRowClass">
      <source-position filename="../src/hdy-combo-row.h" line="62"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_combo_row_new" version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="463">Creates a new #HdyComboRow.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.c"
               line="468">a new #HdyComboRow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="bind_model"
              c:identifier="hdy_combo_row_bind_model"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="500">Binds @model to @self.

If @self was already bound to a model, that previous binding is destroyed.

The contents of @self are cleared and then filled with widgets that represent
items from @model. @self is updated whenever @model changes. If @model is
%NULL, @self is left empty.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="502">a #HdyComboRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="503">the #GListModel to be bound to @self</doc>
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
          <parameter name="create_list_widget_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="call">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="504">a function that creates
  widgets for items to display in the list, or %NULL in case you also passed
  %NULL as @model</doc>
            <type name="Gtk.ListBoxCreateWidgetFunc"
                  c:type="GtkListBoxCreateWidgetFunc"/>
          </parameter>
          <parameter name="create_current_widget_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="3"
                     destroy="4">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="507">a function that creates
  widgets for items to display as the selected item, or %NULL in case you
  also passed %NULL as @model</doc>
            <type name="Gtk.ListBoxCreateWidgetFunc"
                  c:type="GtkListBoxCreateWidgetFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="510">user data passed to @create_list_widget_func and
  @create_current_widget_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="512">function for freeing @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind_name_model"
              c:identifier="hdy_combo_row_bind_name_model"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="572">Binds @model to @self.

If @self was already bound to a model, that previous binding is destroyed.

The contents of @self are cleared and then filled with widgets that represent
items from @model. @self is updated whenever @model changes. If @model is
%NULL, @self is left empty.

This is more convenient to use than hdy_combo_row_bind_model() if you want to
represent items of the model with names.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="574">a #HdyComboRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="575">the #GListModel to be bound to @self</doc>
            <type name="Gio.ListModel" c:type="GListModel*"/>
          </parameter>
          <parameter name="get_name_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="576">a function that creates names for items, or %NULL
  in case you also passed %NULL as @model</doc>
            <type name="ComboRowGetNameFunc" c:type="HdyComboRowGetNameFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="578">user data passed to @get_name_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="579">function for freeing @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_model"
              c:identifier="hdy_combo_row_get_model"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="478">Gets the model bound to @self, or %NULL if none is bound.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="68"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.c"
               line="484">the #GListModel bound to @self or %NULL</doc>
          <type name="Gio.ListModel" c:type="GListModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="480">a #HdyComboRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_selected_index"
              c:identifier="hdy_combo_row_get_selected_index"
              version="0.0.7">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="666">Gets the index of the selected item in its #GListModel.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.c"
               line="672">the index of the selected item, or -1 if no item is selected</doc>
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="668">a #GtkListBoxRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_subtitle"
              c:identifier="hdy_combo_row_get_use_subtitle"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="720">Gets whether the current value of @self should be displayed as its subtitle.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.c"
               line="726">whether the current value of @self should be displayed as its subtitle</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="722">a #GtkListBoxRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_for_enum"
              c:identifier="hdy_combo_row_set_for_enum"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="615">Creates a model for @enum_type and binds it to @self. The items of the model
will be #HdyEnumValueObject objects.

If @self was already bound to a model, that previous binding is destroyed.

The contents of @self are cleared and then filled with widgets that represent
items from @model. @self is updated whenever @model changes. If @model is
%NULL, @self is left empty.

This is more convenient to use than hdy_combo_row_bind_name_model() if you
want to represent values of an enumeration with names.

See hdy_enum_value_row_name().</doc>
        <source-position filename="../src/hdy-combo-row.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="617">a #HdyComboRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="enum_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="618">the enumeration #GType to be bound to @self</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="get_name_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="619">a function that creates names for items, or %NULL
  in case you also passed %NULL as @model</doc>
            <type name="ComboRowGetEnumValueNameFunc"
                  c:type="HdyComboRowGetEnumValueNameFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="621">user data passed to @get_name_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="622">function for freeing @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_get_name_func"
              c:identifier="hdy_combo_row_set_get_name_func"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="776">Sets a closure to convert items into names. See HdyComboRow:use-subtitle.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="778">a #HdyComboRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="get_name_func"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1"
                     scope="notified"
                     closure="1"
                     destroy="2">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="779">a function that creates names for items, or %NULL
  in case you also passed %NULL as @model</doc>
            <type name="ComboRowGetNameFunc" c:type="HdyComboRowGetNameFunc"/>
          </parameter>
          <parameter name="user_data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="781">user data passed to @get_name_func</doc>
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="async">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="782">function for freeing @user_data</doc>
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_selected_index"
              c:identifier="hdy_combo_row_set_selected_index"
              version="0.0.7">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="688">Sets the index of the selected item in its #GListModel.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="690">a #HdyComboRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="selected_index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="691">the index of the selected item</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_subtitle"
              c:identifier="hdy_combo_row_set_use_subtitle"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="742">Sets whether the current value of @self should be displayed as its subtitle.

If %TRUE, you should not access HdyActionRow:subtitle.</doc>
        <source-position filename="../src/hdy-combo-row.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="744">a #HdyComboRow</doc>
            <type name="ComboRow" c:type="HdyComboRow*"/>
          </instance-parameter>
          <parameter name="use_subtitle" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-combo-row.c"
                 line="745">%TRUE to set the current value as the subtitle</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="selected-index"
                version="0.0.7"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="403">The index of the selected item in its #GListModel.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="use-subtitle"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="417">%TRUE to set the current value as the subtitle.

If you use a custom widget creation function, you will need to give the row
a name conversion closure with hdy_combo_row_set_get_name_func().

If %TRUE, you should not access HdyActionRow:subtitle.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="ActionRow" c:type="HdyActionRow"/>
      </field>
    </class>
    <record name="ComboRowClass"
            c:type="HdyComboRowClass"
            glib:is-gtype-struct-for="ComboRow">
      <source-position filename="../src/hdy-combo-row.h" line="62"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.h"
             line="54">The parent class</doc>
        <type name="ActionRowClass" c:type="HdyActionRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <callback name="ComboRowGetEnumValueNameFunc"
              c:type="HdyComboRowGetEnumValueNameFunc">
      <doc xml:space="preserve"
           filename="../src/hdy-combo-row.h"
           line="39">Called for combo rows that are bound to an enumeration with
hdy_combo_row_set_for_enum() for each value from that enumeration.</doc>
      <source-position filename="../src/hdy-combo-row.h" line="49"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.h"
             line="47">a newly allocated displayable name that represents @value</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.h"
               line="41">the value from the enum from which to get a name</doc>
          <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.h"
               line="42">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="ComboRowGetNameFunc" c:type="HdyComboRowGetNameFunc">
      <doc xml:space="preserve"
           filename="../src/hdy-combo-row.h"
           line="26">Called for combo rows that are bound to a #GListModel with
hdy_combo_row_bind_name_model() for each item that gets added to the model.</doc>
      <source-position filename="../src/hdy-combo-row.h" line="36"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.h"
             line="34">a newly allocated displayable name that represents @item</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="item" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.h"
               line="28">the item from the model from which to get a name</doc>
          <type name="GObject.Object" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1"
                   closure="1">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.h"
               line="29">user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Deck"
           c:symbol-prefix="deck"
           c:type="HdyDeck"
           parent="Gtk.Container"
           glib:type-name="HdyDeck"
           glib:get-type="hdy_deck_get_type"
           glib:type-struct="DeckClass">
      <source-position filename="../src/hdy-deck.h" line="41"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Swipeable"/>
      <constructor name="new" c:identifier="hdy_deck_new">
        <source-position filename="../src/hdy-deck.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_adjacent_child"
              c:identifier="hdy_deck_get_adjacent_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="470">Gets the previous or next child, or %NULL if it doesn't exist. This will be
the same widget hdy_deck_navigate() will navigate to.</doc>
        <source-position filename="../src/hdy-deck.h" line="92"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="478">the previous or next child, or
  %NULL if it doesn't exist.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="472">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="473">the direction</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_back"
              c:identifier="hdy_deck_get_can_swipe_back"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="415">Returns whether the #HdyDeck allows swiping to the previous child.</doc>
        <source-position filename="../src/hdy-deck.h" line="81"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="421">%TRUE if back swipe is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="417">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_forward"
              c:identifier="hdy_deck_get_can_swipe_forward"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="452">Returns whether the #HdyDeck allows swiping to the next child.</doc>
        <source-position filename="../src/hdy-deck.h" line="86"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="458">%TRUE if forward swipe is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="454">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_by_name"
              c:identifier="hdy_deck_get_child_by_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="513">Finds the child of @self with the name given as the argument. Returns %NULL
if there is no child with this name.</doc>
        <source-position filename="../src/hdy-deck.h" line="99"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="521">the requested child of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="515">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="516">the name of the child to find</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="hdy_deck_get_homogeneous"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="122">Gets whether @self is homogeneous for the given orientation.
See hdy_deck_set_homogeneous().</doc>
        <source-position filename="../src/hdy-deck.h" line="56"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="130">whether @self is homogeneous for the given orientation.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="124">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="125">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="hdy_deck_get_interpolate_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="377">Returns whether the #HdyDeck is set up to interpolate between
the sizes of children on page switch.</doc>
        <source-position filename="../src/hdy-deck.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="384">%TRUE if child sizes are interpolated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="379">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_duration"
              c:identifier="hdy_deck_get_transition_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="221">Returns the amount of time (in milliseconds) that
transitions between children in @self will take.</doc>
        <source-position filename="../src/hdy-deck.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="228">the child transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="223">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_running"
              c:identifier="hdy_deck_get_transition_running"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="336">Returns whether @self is currently in a transition from one page to
another.</doc>
        <source-position filename="../src/hdy-deck.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="343">%TRUE if the transition is currently running, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="338">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="hdy_deck_get_transition_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="143">Gets the type of animation that will be used
for transitions between children in @self.</doc>
        <source-position filename="../src/hdy-deck.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="150">the current transition type of @self</doc>
          <type name="DeckTransitionType" c:type="HdyDeckTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="145">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child"
              c:identifier="hdy_deck_get_visible_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="259">Gets the visible child widget.</doc>
        <source-position filename="../src/hdy-deck.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="265">the visible child widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="261">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child_name"
              c:identifier="hdy_deck_get_visible_child_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="298">Gets the name of the currently visible child widget.</doc>
        <source-position filename="../src/hdy-deck.h" line="51"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="304">the name of the visible child</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="300">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="navigate" c:identifier="hdy_deck_navigate" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="492">Switches to the previous or next child, similar to performing a swipe
gesture to go in @direction.</doc>
        <source-position filename="../src/hdy-deck.h" line="95"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-deck.c"
               line="500">%TRUE if visible child was changed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="494">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="495">the direction</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_back"
              c:identifier="hdy_deck_set_can_swipe_back"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="396">Sets whether or not @self allows switching to the previous child via a swipe
gesture.</doc>
        <source-position filename="../src/hdy-deck.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="398">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="can_swipe_back" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="399">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_forward"
              c:identifier="hdy_deck_set_can_swipe_forward"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="433">Sets whether or not @self allows switching to the next child via a swipe
gesture.</doc>
        <source-position filename="../src/hdy-deck.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="435">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="can_swipe_forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="436">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="hdy_deck_set_homogeneous"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="98">Sets the #HdyDeck to be homogeneous or not for the given orientation.
If it is homogeneous, the #HdyDeck will request the same
width or height for all its children depending on the orientation.
If it isn't, the deck may change width or height when a different child
becomes visible.</doc>
        <source-position filename="../src/hdy-deck.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="100">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="101">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="102">%TRUE to make @self homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="hdy_deck_set_interpolate_size"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="355">Sets whether or not @self will interpolate its size when
changing the visible child. If the #HdyDeck:interpolate-size
property is set to %TRUE, @self will interpolate its size between
the current one and the one it'll take after changing the
visible child, according to the set transition duration.</doc>
        <source-position filename="../src/hdy-deck.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="357">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="358">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_duration"
              c:identifier="hdy_deck_set_transition_duration"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="240">Sets the duration that transitions between children in @self
will take.</doc>
        <source-position filename="../src/hdy-deck.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="242">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="243">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="hdy_deck_set_transition_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="178">Sets the type of animation that will be used for transitions between children
in @self.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the child that is about to become
current.</doc>
        <source-position filename="../src/hdy-deck.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="180">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="181">the new transition type</doc>
            <type name="DeckTransitionType" c:type="HdyDeckTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child"
              c:identifier="hdy_deck_set_visible_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="277">Makes @visible_child visible using a transition determined by
HdyDeck:transition-type and HdyDeck:transition-duration. The transition can
be cancelled by the user, in which case visible child will change back to
the previously visible child.</doc>
        <source-position filename="../src/hdy-deck.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="279">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="visible_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="280">the new child</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child_name"
              c:identifier="hdy_deck_set_visible_child_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="316">Makes the child with the name @name visible.

See hdy_deck_set_visible_child() for more details.</doc>
        <source-position filename="../src/hdy-deck.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="318">a #HdyDeck</doc>
            <type name="Deck" c:type="HdyDeck*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-deck.c"
                 line="319">the name of a child</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-swipe-back"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="997">Whether or not the deck allows switching to the previous child via a swipe
gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="can-swipe-forward"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="1012">Whether or not the deck allows switching to the next child via a swipe
gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="hhomogeneous"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="879">Horizontally homogeneous sizing.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="982">Whether or not the size should smoothly change when changing between
differently sized children.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-duration"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="954">The transition animation duration, in milliseconds.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-running"
                version="1.0"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="968">Whether or not the transition is currently running.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-type"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="935">The type of animation that will be used for transitions between
children.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the child that is about
to become current.</doc>
        <type name="DeckTransitionType"/>
      </property>
      <property name="vhomogeneous"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="893">Vertically homogeneous sizing.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="visible-child"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="907">The widget currently visible.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="visible-child-name"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="921">The name of the widget currently visible.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Container" c:type="GtkContainer"/>
      </field>
    </class>
    <record name="DeckClass"
            c:type="HdyDeckClass"
            glib:is-gtype-struct-for="Deck">
      <source-position filename="../src/hdy-deck.h" line="41"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.h"
             line="33">The parent class</doc>
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="DeckTransitionType"
                 version="1.0"
                 glib:type-name="HdyDeckTransitionType"
                 glib:get-type="hdy_deck_transition_type_get_type"
                 c:type="HdyDeckTransitionType">
      <doc xml:space="preserve"
           filename="../src/hdy-deck.c"
           line="43">This enumeration value describes the possible transitions between children
in a #HdyDeck widget.

New values may be added to this enumeration over time.</doc>
      <member name="over"
              value="0"
              c:identifier="HDY_DECK_TRANSITION_TYPE_OVER"
              glib:nick="over">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="45">Cover the old page or uncover the new page, sliding from or towards the end according to orientation, text direction and children order</doc>
      </member>
      <member name="under"
              value="1"
              c:identifier="HDY_DECK_TRANSITION_TYPE_UNDER"
              glib:nick="under">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="46">Uncover the new page or cover the old page, sliding from or towards the start according to orientation, text direction and children order</doc>
      </member>
      <member name="slide"
              value="2"
              c:identifier="HDY_DECK_TRANSITION_TYPE_SLIDE"
              glib:nick="slide">
        <doc xml:space="preserve"
             filename="../src/hdy-deck.c"
             line="47">Slide from left, right, up or down according to the orientation, text direction and the children order</doc>
      </member>
    </enumeration>
    <class name="EnumValueObject"
           c:symbol-prefix="enum_value_object"
           c:type="HdyEnumValueObject"
           parent="GObject.Object"
           glib:type-name="HdyEnumValueObject"
           glib:get-type="hdy_enum_value_object_get_type"
           glib:type-struct="EnumValueObjectClass">
      <source-position filename="../src/hdy-enum-value-object.h" line="23"/>
      <constructor name="new" c:identifier="hdy_enum_value_object_new">
        <source-position filename="../src/hdy-enum-value-object.h" line="26"/>
        <return-value transfer-ownership="full">
          <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="enum_value" transfer-ownership="none">
            <type name="GObject.EnumValue" c:type="GEnumValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_name" c:identifier="hdy_enum_value_object_get_name">
        <source-position filename="../src/hdy-enum-value-object.h" line="31"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_nick" c:identifier="hdy_enum_value_object_get_nick">
        <source-position filename="../src/hdy-enum-value-object.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="hdy_enum_value_object_get_value">
        <source-position filename="../src/hdy-enum-value-object.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="gint" c:type="gint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="EnumValueObjectClass"
            c:type="HdyEnumValueObjectClass"
            glib:is-gtype-struct-for="EnumValueObject">
      <source-position filename="../src/hdy-enum-value-object.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ExpanderRow"
           c:symbol-prefix="expander_row"
           c:type="HdyExpanderRow"
           parent="PreferencesRow"
           glib:type-name="HdyExpanderRow"
           glib:get-type="hdy_expander_row_get_type"
           glib:type-struct="ExpanderRowClass">
      <source-position filename="../src/hdy-expander-row.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_expander_row_new"
                   version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="422">Creates a new #HdyExpanderRow.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-expander-row.c"
               line="427">a new #HdyExpanderRow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="add_action"
              c:identifier="hdy_expander_row_add_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="710">Adds an action widget to @self.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="712">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="713">the action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_prefix"
              c:identifier="hdy_expander_row_add_prefix"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="734">Adds a prefix widget to @self.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="736">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="widget" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="737">the prefix widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_enable_expansion"
              c:identifier="hdy_expander_row_get_enable_expansion"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="606">Gets whether the expansion of @self is enabled.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="65"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-expander-row.c"
               line="612">whether the expansion of @self is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="608">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_expanded" c:identifier="hdy_expander_row_get_expanded">
        <source-position filename="../src/hdy-expander-row.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_icon_name"
              c:identifier="hdy_expander_row_get_icon_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="528">Gets the icon name for @self.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-expander-row.c"
               line="534">the icon name for @self.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="530">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_enable_switch"
              c:identifier="hdy_expander_row_get_show_enable_switch"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="659">Gets whether the switch enabling the expansion of @self is visible.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="71"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-expander-row.c"
               line="665">whether the switch enabling the expansion of @self is visible.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="661">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="hdy_expander_row_get_subtitle"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="437">Gets the subtitle for @self.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="41"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-expander-row.c"
               line="443">the subtitle for @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="439">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="hdy_expander_row_get_use_underline"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="481">Gets whether an embedded underline in the text of the title and subtitle
labels indicates a mnemonic. See hdy_expander_row_set_use_underline().</doc>
        <source-position filename="../src/hdy-expander-row.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-expander-row.c"
               line="488">%TRUE if an embedded underline in the title and subtitle labels
         indicates the mnemonic accelerator keys.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="483">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_enable_expansion"
              c:identifier="hdy_expander_row_set_enable_expansion"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="628">Sets whether the expansion of @self is enabled.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="630">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="enable_expansion" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="631">%TRUE to enable the expansion</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_expanded" c:identifier="hdy_expander_row_set_expanded">
        <source-position filename="../src/hdy-expander-row.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="expanded" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_expander_row_set_icon_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="550">Sets the icon name for @self.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="552">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="icon_name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="553">the icon name</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_enable_switch"
              c:identifier="hdy_expander_row_set_show_enable_switch"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="681">Sets whether the switch enabling the expansion of @self is visible.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="73"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="683">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="show_enable_switch" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="684">%TRUE to show the switch enabling the expansion</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="hdy_expander_row_set_subtitle"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="459">Sets the subtitle for @self.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="461">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="462">the subtitle</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="hdy_expander_row_set_use_underline"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="505">If true, an underline in the text of the title and subtitle labels indicates
the next character should be used for the mnemonic accelerator key.</doc>
        <source-position filename="../src/hdy-expander-row.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="507">a #HdyExpanderRow</doc>
            <type name="ExpanderRow" c:type="HdyExpanderRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-expander-row.c"
                 line="508">%TRUE if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="enable-expansion" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="331">%TRUE if the expansion is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="expanded" writable="1" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="319">%TRUE if the row is expanded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="icon-name"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="305">The icon name for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="show-enable-switch"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="343">%TRUE if the switch enabling the expansion is visible.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="276">The subtitle for this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-underline"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.c"
             line="290">Whether an embedded underline in the text of the title and subtitle labels
indicates a mnemonic.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="PreferencesRow" c:type="HdyPreferencesRow"/>
      </field>
    </class>
    <record name="ExpanderRowClass"
            c:type="HdyExpanderRowClass"
            glib:is-gtype-struct-for="ExpanderRow">
      <source-position filename="../src/hdy-expander-row.h" line="35"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-expander-row.h"
             line="27">The parent class</doc>
        <type name="PreferencesRowClass" c:type="HdyPreferencesRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="HeaderBar"
           c:symbol-prefix="header_bar"
           c:type="HdyHeaderBar"
           parent="Gtk.Container"
           glib:type-name="HdyHeaderBar"
           glib:get-type="hdy_header_bar_get_type"
           glib:type-struct="HeaderBarClass">
      <source-position filename="../src/hdy-header-bar.h" line="54"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_header_bar_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2274">Creates a new #HdyHeaderBar widget.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="57"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2279">a new #HdyHeaderBar</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_centering_policy"
              c:identifier="hdy_header_bar_get_centering_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2699">Gets the policy @self follows to horizontally align its center widget.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="103"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2705">the centering policy</doc>
          <type name="CenteringPolicy" c:type="HdyCenteringPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2701">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_custom_title"
              c:identifier="hdy_header_bar_get_custom_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2499">Retrieves the custom title widget of the header. See
hdy_header_bar_set_custom_title().</doc>
        <source-position filename="../src/hdy-header-bar.h" line="72"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2506">the custom title widget
   of the header, or %NULL if none has been set explicitly.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2501">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_decoration_layout"
              c:identifier="hdy_header_bar_get_decoration_layout"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2676">Gets the decoration layout set with
hdy_header_bar_set_decoration_layout().</doc>
        <source-position filename="../src/hdy-header-bar.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2683">the decoration layout</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2678">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_has_subtitle"
              c:identifier="hdy_header_bar_get_has_subtitle"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2607">Retrieves whether the header bar reserves space for
a subtitle, regardless if one is currently set or not.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="91"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2614">%TRUE if the header bar reserves space
    for a subtitle</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2609">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="hdy_header_bar_get_interpolate_size"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2814">Gets whether @self should interpolate its size on visible child change.

See hdy_header_bar_set_interpolate_size().</doc>
        <source-position filename="../src/hdy-header-bar.h" line="118"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2822">%TRUE if @self interpolates its size on visible child change, %FALSE if not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2816">A #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_close_button"
              c:identifier="hdy_header_bar_get_show_close_button"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2521">Returns whether this header bar shows the standard window
decorations.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2528">%TRUE if the decorations are shown</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2523">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="hdy_header_bar_get_subtitle"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2415">Retrieves the subtitle of the header. See hdy_header_bar_set_subtitle().</doc>
        <source-position filename="../src/hdy-header-bar.h" line="66"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2421">the subtitle of the header, or %NULL if none has
   been set explicitly. The returned string is owned by the widget
   and must not be modified or freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2417">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_header_bar_get_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2355">Retrieves the title of the header. See hdy_header_bar_set_title().</doc>
        <source-position filename="../src/hdy-header-bar.h" line="60"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2361">the title of the header, or %NULL if none has
   been set explicitly. The returned string is owned by the widget
   and must not be modified or freed.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2357">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_duration"
              c:identifier="hdy_header_bar_get_transition_duration"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2747">Returns the amount of time (in milliseconds) that
transitions between pages in @self will take.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="109"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2754">the transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2749">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_running"
              c:identifier="hdy_header_bar_get_transition_running"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2793">Returns whether the @self is currently in a transition from one page to
another.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="115"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-bar.c"
               line="2800">%TRUE if the transition is currently running, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2795">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="pack_end"
              c:identifier="hdy_header_bar_pack_end"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2306">Adds @child to @self:, packed with reference to the
end of the @self:.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2308">A #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2309">the #GtkWidget to be added to @self:</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="pack_start"
              c:identifier="hdy_header_bar_pack_start"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2289">Adds @child to @self:, packed with reference to the
start of the @self:.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2291">A #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2292">the #GtkWidget to be added to @self:</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_centering_policy"
              c:identifier="hdy_header_bar_set_centering_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2719">Sets the policy @self must follow to horizontally align its center widget.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2721">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="centering_policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2722">the centering policy</doc>
            <type name="CenteringPolicy" c:type="HdyCenteringPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_custom_title"
              c:identifier="hdy_header_bar_set_custom_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2437">Sets a custom title for the #HdyHeaderBar.

The title should help a user identify the current view. This
supersedes any title set by hdy_header_bar_set_title() or
hdy_header_bar_set_subtitle(). To achieve the same style as
the builtin title and subtitle, use the “title” and “subtitle”
style classes.

You should set the custom title to %NULL, for the header title
label to be visible again.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2439">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="title_widget"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2440">a custom widget to use for a title</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_decoration_layout"
              c:identifier="hdy_header_bar_set_decoration_layout"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2631">Sets the decoration layout for this header bar, overriding
the #GtkSettings:gtk-decoration-layout setting.

There can be valid reasons for overriding the setting, such
as a header bar design that does not allow for buttons to take
room on the right, or only offers room for a single close button.
Split header bars are another example for overriding the
setting.

The format of the string is button names, separated by commas.
A colon separates the buttons that should appear on the left
from those on the right. Recognized button names are minimize,
maximize, close, icon (the window icon) and menu (a menu button
for the fallback app menu).

For example, “menu:minimize,maximize,close” specifies a menu
on the left, and minimize, maximize and close buttons on the right.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2633">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="layout"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2634">a decoration layout, or %NULL to unset the layout</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_has_subtitle"
              c:identifier="hdy_header_bar_set_has_subtitle"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2574">Sets whether the header bar should reserve space
for a subtitle, even if none is currently set.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2576">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2577">%TRUE to reserve space for a subtitle</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="hdy_header_bar_set_interpolate_size"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2838">Sets whether or not @self will interpolate the size of its opposing
orientation when changing the visible child. If %TRUE, @self will interpolate
its size between the one of the previous visible child and the one of the new
visible child, according to the set transition duration and the orientation,
e.g. if @self is horizontal, it will interpolate the its height.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2840">A #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2841">%TRUE to interpolate the size</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_close_button"
              c:identifier="hdy_header_bar_set_show_close_button"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2544">Sets whether this header bar shows the standard window decorations,
including close, maximize, and minimize.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2546">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="setting" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2547">%TRUE to show standard window decorations</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="hdy_header_bar_set_subtitle"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2377">Sets the subtitle of the #HdyHeaderBar. The title should give a user
an additional detail to help them identify the current view.

Note that HdyHeaderBar by default reserves room for the subtitle,
even if none is currently set. If this is not desired, set the
#HdyHeaderBar:has-subtitle property to %FALSE.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2379">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2380">a subtitle, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_header_bar_set_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2323">Sets the title of the #HdyHeaderBar. The title should help a user
identify the current view. A good title should not include the
application name.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2325">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2326">a title, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_duration"
              c:identifier="hdy_header_bar_set_transition_duration"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2768">Sets the duration that transitions between pages in @self
will take.</doc>
        <source-position filename="../src/hdy-header-bar.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2770">a #HdyHeaderBar</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-bar.c"
                 line="2771">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="centering-policy" writable="1" transfer-ownership="none">
        <type name="CenteringPolicy"/>
      </property>
      <property name="custom-title" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="decoration-layout"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2144">The decoration layout for buttons. If this property is
not set, the #GtkSettings:gtk-decoration-layout setting
is used.

See hdy_header_bar_set_decoration_layout() for information
about the format of this string.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="decoration-layout-set"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2163">Set to %TRUE if #HdyHeaderBar:decoration-layout is set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="has-subtitle"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2177">If %TRUE, reserve space for a subtitle, even if none
is currently set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-close-button"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.c"
             line="2125">Whether to show window decorations.

Which buttons are actually shown and where is determined
by the #HdyHeaderBar:decoration-layout property, and by
the state of the window (e.g. a close button will not be
shown if the window can't be closed).</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="spacing" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="subtitle" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="transition-duration"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-running" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Container" c:type="GtkContainer"/>
      </field>
    </class>
    <record name="HeaderBarClass"
            c:type="HdyHeaderBarClass"
            glib:is-gtype-struct-for="HeaderBar">
      <source-position filename="../src/hdy-header-bar.h" line="54"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-header-bar.h"
             line="46">The parent class</doc>
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="HeaderGroup"
           c:symbol-prefix="header_group"
           c:type="HdyHeaderGroup"
           parent="GObject.Object"
           glib:type-name="HdyHeaderGroup"
           glib:get-type="hdy_header_group_get_type"
           glib:type-struct="HeaderGroupClass">
      <source-position filename="../src/hdy-header-group.h" line="28"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_header_group_new">
        <source-position filename="../src/hdy-header-group.h" line="47"/>
        <return-value transfer-ownership="full">
          <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
        </return-value>
      </constructor>
      <method name="add_gtk_header_bar"
              c:identifier="hdy_header_group_add_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="450">Adds @header_bar to @self.
When the widget is destroyed or no longer referenced elsewhere, it will
be removed from the header group.</doc>
        <source-position filename="../src/hdy-header-group.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="452">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="453">the #GtkHeaderBar to add</doc>
            <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_header_bar"
              c:identifier="hdy_header_group_add_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="425">Adds @header_bar to @self.
When the widget is destroyed or no longer referenced elsewhere, it will
be removed from the header group.</doc>
        <source-position filename="../src/hdy-header-group.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="427">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="428">the #HdyHeaderBar to add</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_header_group"
              c:identifier="hdy_header_group_add_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="475">Adds @header_group to @self.
When the nested group is no longer referenced elsewhere, it will be removed
from the header group.</doc>
        <source-position filename="../src/hdy-header-group.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="477">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="478">the #HdyHeaderGroup to add</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_children"
              c:identifier="hdy_header_group_get_children"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="945">Returns the list of children associated with @self.</doc>
        <source-position filename="../src/hdy-header-group.h" line="60"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-group.c"
               line="951">the #GSList of
  children. The list is owned by libhandy and should not be modified.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="HeaderGroupChild"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="947">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_decorate_all"
              c:identifier="hdy_header_group_get_decorate_all"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="1098">Gets whether the elements of the group should all receive the full decoration.</doc>
        <source-position filename="../src/hdy-header-group.h" line="76"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-group.c"
               line="1104">%TRUE if the elements of the group should all receive the full
  decoration, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1100">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_child"
              c:identifier="hdy_header_group_remove_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="1051">Removes @child from @self.</doc>
        <source-position filename="../src/hdy-header-group.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1053">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1054">the #HdyHeaderGroupChild to remove</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_gtk_header_bar"
              c:identifier="hdy_header_group_remove_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="1001">Removes @header_bar from @self.</doc>
        <source-position filename="../src/hdy-header-group.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1003">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1004">the #GtkHeaderBar to remove</doc>
            <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_header_bar"
              c:identifier="hdy_header_group_remove_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="976">Removes @header_bar from @self.</doc>
        <source-position filename="../src/hdy-header-group.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="978">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_bar" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="979">the #HdyHeaderBar to remove</doc>
            <type name="HeaderBar" c:type="HdyHeaderBar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_header_group"
              c:identifier="hdy_header_group_remove_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="1026">Removes a nested #HdyHeaderGroup from a #HdyHeaderGroup</doc>
        <source-position filename="../src/hdy-header-group.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1028">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="header_group" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1029">the #HdyHeaderGroup to remove</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_decorate_all"
              c:identifier="hdy_header_group_set_decorate_all"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="1071">Sets whether the elements of the group should all receive the full decoration.</doc>
        <source-position filename="../src/hdy-header-group.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1073">a #HdyHeaderGroup</doc>
            <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
          </instance-parameter>
          <parameter name="decorate_all" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="1074">whether the elements of the group should all receive the full decoration</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="decorate-all"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="815">Whether the elements of the group should all receive the full decoration.
This is useful in conjunction with #HdyLeaflet:folded when the leaflet
contains the header bars of the group, as you want them all to display the
complete decoration when the leaflet is folded.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <glib:signal name="update-decoration-layouts" when="last" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="834">This signal is emitted before updating the decoration layouts.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <class name="HeaderGroupChild"
           c:symbol-prefix="header_group_child"
           c:type="HdyHeaderGroupChild"
           parent="GObject.Object"
           glib:type-name="HdyHeaderGroupChild"
           glib:get-type="hdy_header_group_child_get_type"
           glib:type-struct="HeaderGroupChildClass">
      <source-position filename="../src/hdy-header-group.h" line="23"/>
      <method name="get_child_type"
              c:identifier="hdy_header_group_child_get_child_type"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="927">Gets the child type.</doc>
        <source-position filename="../src/hdy-header-group.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-group.c"
               line="933">the child type.</doc>
          <type name="HeaderGroupChildType" c:type="HdyHeaderGroupChildType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="929">a #HdyHeaderGroupChild</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gtk_header_bar"
              c:identifier="hdy_header_group_child_get_gtk_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="887">Gets the child #GtkHeaderBar.
Use hdy_header_group_child_get_child_type() to check the child type.</doc>
        <source-position filename="../src/hdy-header-group.h" line="39"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-group.c"
               line="894">the child #GtkHeaderBar, or %NULL in case of error.</doc>
          <type name="Gtk.HeaderBar" c:type="GtkHeaderBar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="889">a #HdyHeaderGroupChild</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header_bar"
              c:identifier="hdy_header_group_child_get_header_bar"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="867">Gets the child #HdyHeaderBar.
Use hdy_header_group_child_get_child_type() to check the child type.</doc>
        <source-position filename="../src/hdy-header-group.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-group.c"
               line="874">the child #HdyHeaderBar, or %NULL in case of error.</doc>
          <type name="HeaderBar" c:type="HdyHeaderBar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="869">a #HdyHeaderGroupChild</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_header_group"
              c:identifier="hdy_header_group_child_get_header_group"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="907">Gets the child #HdyHeaderGroup.
Use hdy_header_group_child_get_child_type() to check the child type.</doc>
        <source-position filename="../src/hdy-header-group.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-header-group.c"
               line="914">the child #HdyHeaderGroup, or %NULL in case of error.</doc>
          <type name="HeaderGroup" c:type="HdyHeaderGroup*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-header-group.c"
                 line="909">a #HdyHeaderGroupChild</doc>
            <type name="HeaderGroupChild" c:type="HdyHeaderGroupChild*"/>
          </instance-parameter>
        </parameters>
      </method>
    </class>
    <record name="HeaderGroupChildClass"
            c:type="HdyHeaderGroupChildClass"
            glib:is-gtype-struct-for="HeaderGroupChild">
      <source-position filename="../src/hdy-header-group.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="HeaderGroupChildType"
                 version="1.0"
                 glib:type-name="HdyHeaderGroupChildType"
                 glib:get-type="hdy_header_group_child_type_get_type"
                 c:type="HdyHeaderGroupChildType">
      <doc xml:space="preserve"
           filename="../src/hdy-header-group.c"
           line="50">This enumeration value describes the child types handled by #HdyHeaderGroup.

New values may be added to this enumeration over time.</doc>
      <member name="header_bar"
              value="0"
              c:identifier="HDY_HEADER_GROUP_CHILD_TYPE_HEADER_BAR"
              glib:nick="header-bar">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="52">The child is a #HdyHeaderBar</doc>
      </member>
      <member name="gtk_header_bar"
              value="1"
              c:identifier="HDY_HEADER_GROUP_CHILD_TYPE_GTK_HEADER_BAR"
              glib:nick="gtk-header-bar">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="53">The child is a #GtkHeaderBar</doc>
      </member>
      <member name="header_group"
              value="2"
              c:identifier="HDY_HEADER_GROUP_CHILD_TYPE_HEADER_GROUP"
              glib:nick="header-group">
        <doc xml:space="preserve"
             filename="../src/hdy-header-group.c"
             line="54">The child is a #HdyHeaderGroup</doc>
      </member>
    </enumeration>
    <record name="HeaderGroupClass"
            c:type="HdyHeaderGroupClass"
            glib:is-gtype-struct-for="HeaderGroup">
      <source-position filename="../src/hdy-header-group.h" line="28"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="Keypad"
           c:symbol-prefix="keypad"
           c:type="HdyKeypad"
           parent="Gtk.Bin"
           glib:type-name="HdyKeypad"
           glib:get-type="hdy_keypad_get_type"
           glib:type-struct="KeypadClass">
      <source-position filename="../src/hdy-keypad.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_keypad_new" version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="373">Create a new #HdyKeypad widget.</doc>
        <source-position filename="../src/hdy-keypad.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-keypad.c"
               line="380">the newly created #HdyKeypad widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <parameter name="symbols_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="375">whether the hash, plus, and asterisk symbols should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="letters_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="376">whether the letters below the digits should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_column_spacing"
              c:identifier="hdy_keypad_get_column_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="475">Returns the amount of space between the columns of @self.</doc>
        <source-position filename="../src/hdy-keypad.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-keypad.c"
               line="481">the column spacing of @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="477">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_end_action"
              c:identifier="hdy_keypad_get_end_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="772">Returns the widget for the lower right corner (or left, in RTL locales) of
@self.</doc>
        <source-position filename="../src/hdy-keypad.h" line="73"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-keypad.c"
               line="779">the end action widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="774">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_entry"
              c:identifier="hdy_keypad_get_entry"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="651">Get the connected entry. See hdy_keypad_set_entry() for details.</doc>
        <source-position filename="../src/hdy-keypad.h" line="63"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-keypad.c"
               line="657">the set #GtkEntry or %NULL if no widget was set</doc>
          <type name="Gtk.Entry" c:type="GtkEntry*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="653">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_letters_visible"
              c:identifier="hdy_keypad_get_letters_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="527">Returns whether @self should display the standard letters below the digits on
its buttons.</doc>
        <source-position filename="../src/hdy-keypad.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-keypad.c"
               line="534">whether the letters below the digits should be visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="529">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_row_spacing"
              c:identifier="hdy_keypad_get_row_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="423">Returns the amount of space between the rows of @self.</doc>
        <source-position filename="../src/hdy-keypad.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-keypad.c"
               line="429">the row spacing of @self</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="425">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_start_action"
              c:identifier="hdy_keypad_get_start_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="711">Returns the widget for the lower left corner (or right, in RTL locales) of
@self.</doc>
        <source-position filename="../src/hdy-keypad.h" line="68"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-keypad.c"
               line="718">the start action widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="713">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_symbols_visible"
              c:identifier="hdy_keypad_get_symbols_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="580">Returns whether @self should display the standard letters below the digits on
its buttons.

Returns Whether @self should display the hash and asterisk buttons, and
should display the plus symbol at the bottom of its 0 button.</doc>
        <source-position filename="../src/hdy-keypad.h" line="58"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-keypad.c"
               line="590">whether the hash, plus, and asterisk symbols should be visible</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="582">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_column_spacing"
              c:identifier="hdy_keypad_set_column_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="446">Sets the amount of space between columns of @self.</doc>
        <source-position filename="../src/hdy-keypad.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="448">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="449">the amount of space to insert between columns</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_end_action"
              c:identifier="hdy_keypad_set_end_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="735">Sets the widget for the lower right corner (or left, in RTL locales) of
@self.</doc>
        <source-position filename="../src/hdy-keypad.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="737">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="end_action"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="738">the end action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_entry"
              c:identifier="hdy_keypad_set_entry"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="607">Binds @entry to @self and blocks any input which wouldn't be possible to type
with with the keypad.</doc>
        <source-position filename="../src/hdy-keypad.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="609">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="entry"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="610">a #GtkEntry</doc>
            <type name="Gtk.Entry" c:type="GtkEntry*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_letters_visible"
              c:identifier="hdy_keypad_set_letters_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="498">Sets whether @self should display the standard letters below the digits on
its buttons.</doc>
        <source-position filename="../src/hdy-keypad.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="500">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="letters_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="501">whether the letters below the digits should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_row_spacing"
              c:identifier="hdy_keypad_set_row_spacing"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="394">Sets the amount of space between rows of @self.</doc>
        <source-position filename="../src/hdy-keypad.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="396">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="spacing" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="397">the amount of space to insert between rows</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_start_action"
              c:identifier="hdy_keypad_set_start_action"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="674">Sets the widget for the lower left corner (or right, in RTL locales) of
@self.</doc>
        <source-position filename="../src/hdy-keypad.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="676">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="start_action"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="677">the start action widget</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_symbols_visible"
              c:identifier="hdy_keypad_set_symbols_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="551">Sets whether @self should display the hash and asterisk buttons, and should
display the plus symbol at the bottom of its 0 button.</doc>
        <source-position filename="../src/hdy-keypad.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="553">a #HdyKeypad</doc>
            <type name="Keypad" c:type="HdyKeypad*"/>
          </instance-parameter>
          <parameter name="symbols_visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-keypad.c"
                 line="554">whether the hash, plus, and asterisk symbols should be visible</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="column-spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="252">The amount of space between two consecutive columns.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="end-action"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="311">The widget for the lower end corner of @self.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="entry"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="296">The entry widget connected to the keypad. See hdy_keypad_set_entry() for
details.</doc>
        <type name="Gtk.Entry"/>
      </property>
      <property name="letters-visible"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="266">Whether the keypad should display the standard letters below the digits on
its buttons.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="row-spacing"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="238">The amount of space between two consecutive rows.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="start-action"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="325">The widget for the lower start corner of @self.</doc>
        <type name="Gtk.Widget"/>
      </property>
      <property name="symbols-visible"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.c"
             line="281">Whether the keypad should display the hash and asterisk buttons, and should
display the plus symbol at the bottom of its 0 button.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="KeypadClass"
            c:type="HdyKeypadClass"
            glib:is-gtype-struct-for="Keypad">
      <source-position filename="../src/hdy-keypad.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-keypad.h"
             line="26">The parent class</doc>
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Leaflet"
           c:symbol-prefix="leaflet"
           c:type="HdyLeaflet"
           parent="Gtk.Container"
           glib:type-name="HdyLeaflet"
           glib:get-type="hdy_leaflet_get_type"
           glib:type-struct="LeafletClass">
      <source-position filename="../src/hdy-leaflet.h" line="42"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <implements name="Swipeable"/>
      <constructor name="new" c:identifier="hdy_leaflet_new">
        <source-position filename="../src/hdy-leaflet.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_adjacent_child"
              c:identifier="hdy_leaflet_get_adjacent_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="512">Gets the previous or next child that doesn't have 'navigatable' child
property set to %FALSE, or %NULL if it doesn't exist. This will be the same
widget hdy_leaflet_navigate() will navigate to.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="103"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="521">the previous or next child, or
  %NULL if it doesn't exist.</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="514">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="515">the direction</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_back"
              c:identifier="hdy_leaflet_get_can_swipe_back"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="457">Returns whether the #HdyLeaflet allows swiping to the previous child.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="463">%TRUE if back swipe is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="459">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_forward"
              c:identifier="hdy_leaflet_get_can_swipe_forward"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="494">Returns whether the #HdyLeaflet allows swiping to the next child.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="500">%TRUE if forward swipe is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="496">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_by_name"
              c:identifier="hdy_leaflet_get_child_by_name"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="557">Finds the child of @self with the name given as the argument. Returns %NULL
if there is no child with this name.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="110"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="565">the requested child of @self</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="559">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="560">the name of the child to find</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_transition_duration"
              c:identifier="hdy_leaflet_get_child_transition_duration">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="281">Returns the amount of time (in milliseconds) that
transitions between children in @self will take.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="80"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="288">the child transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="283">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_child_transition_running"
              c:identifier="hdy_leaflet_get_child_transition_running">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="384">Returns whether @self is currently in a transition from one page to
another.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="85"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="391">%TRUE if the transition is currently running, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="386">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_folded" c:identifier="hdy_leaflet_get_folded">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="108">Gets whether @self is folded.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="114">whether @self is folded.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="110">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="hdy_leaflet_get_homogeneous">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="148">Gets whether @self is homogeneous for the given fold and orientation.
See hdy_leaflet_set_homogeneous().</doc>
        <source-position filename="../src/hdy-leaflet.h" line="59"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="157">whether @self is homogeneous for the given fold and orientation.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="150">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="folded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="151">the fold</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="152">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="hdy_leaflet_get_interpolate_size">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="421">Returns whether the #HdyLeaflet is set up to interpolate between
the sizes of children on page switch.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="87"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="428">%TRUE if child sizes are interpolated</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="423">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_mode_transition_duration"
              c:identifier="hdy_leaflet_get_mode_transition_duration">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="247">Returns the amount of time (in milliseconds) that
transitions between modes in @self will take.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="74"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="254">the mode transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="249">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="hdy_leaflet_get_transition_type"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="169">Gets the type of animation that will be used
for transitions between modes and children in @self.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="68"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="176">the current transition type of @self</doc>
          <type name="LeafletTransitionType"
                c:type="HdyLeafletTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="171">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child"
              c:identifier="hdy_leaflet_get_visible_child">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="315">Gets the visible child widget.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="321">the visible child widget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="317">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child_name"
              c:identifier="hdy_leaflet_get_visible_child_name">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="350">Gets the name of the currently visible child widget.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="356">the name of the visible child</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="352">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="navigate"
              c:identifier="hdy_leaflet_navigate"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="535">Switches to the previous or next child that doesn't have 'navigatable' child
property set to %FALSE, similar to performing a swipe gesture to go in
@direction.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="106"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-leaflet.c"
               line="544">%TRUE if visible child was changed, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="537">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="538">the direction</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_back"
              c:identifier="hdy_leaflet_set_can_swipe_back"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="438">Sets whether or not @self allows switching to the previous child that has
'navigatable' child property set to %TRUE via a swipe gesture</doc>
        <source-position filename="../src/hdy-leaflet.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="440">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="can_swipe_back" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="441">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_forward"
              c:identifier="hdy_leaflet_set_can_swipe_forward"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="475">Sets whether or not @self allows switching to the next child that has
'navigatable' child property set to %TRUE via a swipe gesture.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="477">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="can_swipe_forward" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="478">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_child_transition_duration"
              c:identifier="hdy_leaflet_set_child_transition_duration">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="298">Sets the duration that transitions between children in @self
will take.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="300">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="301">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="hdy_leaflet_set_homogeneous">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="124">Sets the #HdyLeaflet to be homogeneous or not for the given fold and orientation.
If it is homogeneous, the #HdyLeaflet will request the same
width or height for all its children depending on the orientation.
If it isn't and it is folded, the leaflet may change width or height
when a different child becomes visible.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="126">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="folded" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="127">the fold</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="orientation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="128">the orientation</doc>
            <type name="Gtk.Orientation" c:type="GtkOrientation"/>
          </parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="129">%TRUE to make @self homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="hdy_leaflet_set_interpolate_size">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="401">Sets whether or not @self will interpolate its size when
changing the visible child. If the #HdyLeaflet:interpolate-size
property is set to %TRUE, @self will interpolate its size between
the current one and the one it'll take after changing the
visible child, according to the set transition duration.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="89"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="403">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="404">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mode_transition_duration"
              c:identifier="hdy_leaflet_set_mode_transition_duration">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="264">Sets the duration that transitions between modes in @self
will take.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="266">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="267">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="hdy_leaflet_set_transition_type"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="204">Sets the type of animation that will be used for transitions between modes
and children in @self.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the mode or child that is about to
become current.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="206">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="207">the new transition type</doc>
            <type name="LeafletTransitionType"
                  c:type="HdyLeafletTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child"
              c:identifier="hdy_leaflet_set_visible_child">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="331">Makes @visible_child visible using a transition determined by
HdyLeaflet:transition-type and HdyLeaflet:child-transition-duration. The
transition can be cancelled by the user, in which case visible child will
change back to the previously visible child.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="333">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="visible_child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="334">the new child</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visible_child_name"
              c:identifier="hdy_leaflet_set_visible_child_name">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="366">Makes the child with the name @name visible.

See hdy_leaflet_set_visible_child() for more details.</doc>
        <source-position filename="../src/hdy-leaflet.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="368">a #HdyLeaflet</doc>
            <type name="Leaflet" c:type="HdyLeaflet*"/>
          </instance-parameter>
          <parameter name="name" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-leaflet.c"
                 line="369">the name of a child</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-swipe-back"
                version="0.0.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="1077">Whether or not the leaflet allows switching to the previous child that has
'navigatable' child property set to %TRUE via a swipe gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="can-swipe-forward"
                version="0.0.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="1092">Whether or not the leaflet allows switching to the next child that has
'navigatable' child property set to %TRUE via a swipe gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="child-transition-duration"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="child-transition-running" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="folded" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="953">%TRUE if the leaflet is folded.

The leaflet will be folded if the size allocated to it is smaller than the
sum of the natural size of its children, it will be unfolded otherwise.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="hhomogeneous-folded"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="hhomogeneous-unfolded"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="mode-transition-duration"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-type"
                version="0.0.12"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="1030">The type of animation that will be used for transitions between modes and
children.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the mode or child that is about
to become current.</doc>
        <type name="LeafletTransitionType"/>
      </property>
      <property name="vhomogeneous-folded"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="vhomogeneous-unfolded"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="visible-child" writable="1" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="visible-child-name"
                writable="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Container" c:type="GtkContainer"/>
      </field>
    </class>
    <record name="LeafletClass"
            c:type="HdyLeafletClass"
            glib:is-gtype-struct-for="Leaflet">
      <source-position filename="../src/hdy-leaflet.h" line="42"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.h"
             line="34">The parent class</doc>
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <enumeration name="LeafletTransitionType"
                 version="0.0.12"
                 glib:type-name="HdyLeafletTransitionType"
                 glib:get-type="hdy_leaflet_transition_type_get_type"
                 c:type="HdyLeafletTransitionType">
      <doc xml:space="preserve"
           filename="../src/hdy-leaflet.c"
           line="48">This enumeration value describes the possible transitions between modes and
children in a #HdyLeaflet widget.

New values may be added to this enumeration over time.</doc>
      <member name="over"
              value="0"
              c:identifier="HDY_LEAFLET_TRANSITION_TYPE_OVER"
              glib:nick="over">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="50">Cover the old page or uncover the new page, sliding from or towards the end according to orientation, text direction and children order</doc>
      </member>
      <member name="under"
              value="1"
              c:identifier="HDY_LEAFLET_TRANSITION_TYPE_UNDER"
              glib:nick="under">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="51">Uncover the new page or cover the old page, sliding from or towards the start according to orientation, text direction and children order</doc>
      </member>
      <member name="slide"
              value="2"
              c:identifier="HDY_LEAFLET_TRANSITION_TYPE_SLIDE"
              glib:nick="slide">
        <doc xml:space="preserve"
             filename="../src/hdy-leaflet.c"
             line="52">Slide from left, right, up or down according to the orientation, text direction and the children order</doc>
      </member>
    </enumeration>
    <enumeration name="NavigationDirection"
                 version="1.0"
                 glib:type-name="HdyNavigationDirection"
                 glib:get-type="hdy_navigation_direction_get_type"
                 c:type="HdyNavigationDirection">
      <doc xml:space="preserve"
           filename="../src/hdy-navigation-direction.c"
           line="17">Represents direction of a swipe navigation gesture in #HdyDeck and
#HdyLeaflet.</doc>
      <member name="back"
              value="0"
              c:identifier="HDY_NAVIGATION_DIRECTION_BACK"
              glib:nick="back">
        <doc xml:space="preserve"
             filename="../src/hdy-navigation-direction.c"
             line="19">Corresponds to start or top, depending on orientation and text direction</doc>
      </member>
      <member name="forward"
              value="1"
              c:identifier="HDY_NAVIGATION_DIRECTION_FORWARD"
              glib:nick="forward">
        <doc xml:space="preserve"
             filename="../src/hdy-navigation-direction.c"
             line="20">Corresponds to end or bottom, depending on orientation and text direction</doc>
      </member>
    </enumeration>
    <class name="PreferencesGroup"
           c:symbol-prefix="preferences_group"
           c:type="HdyPreferencesGroup"
           parent="Gtk.Bin"
           glib:type-name="HdyPreferencesGroup"
           glib:get-type="hdy_preferences_group_get_type"
           glib:type-struct="PreferencesGroupClass">
      <source-position filename="../src/hdy-preferences-group.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_preferences_group_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-group.c"
             line="293">Creates a new #HdyPreferencesGroup.</doc>
        <source-position filename="../src/hdy-preferences-group.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-group.c"
               line="298">a new #HdyPreferencesGroup</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_description"
              c:identifier="hdy_preferences_group_get_description"
              version="0.0.10">
        <source-position filename="../src/hdy-preferences-group.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-group.c"
               line="363">the description of @self.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-group.c"
                 line="360">a #HdyPreferencesGroup</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_preferences_group_get_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-group.c"
             line="308">Gets the title of @self.</doc>
        <source-position filename="../src/hdy-preferences-group.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-group.c"
               line="314">the title of @self.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-group.c"
                 line="310">a #HdyPreferencesGroup</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_description"
              c:identifier="hdy_preferences_group_set_description"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-group.c"
             line="379">Sets the description for @self.</doc>
        <source-position filename="../src/hdy-preferences-group.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-group.c"
                 line="381">a #HdyPreferencesGroup</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="description" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-group.c"
                 line="382">the description</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_preferences_group_set_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-group.c"
             line="330">Sets the title for @self.</doc>
        <source-position filename="../src/hdy-preferences-group.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-group.c"
                 line="332">a #HdyPreferencesGroup</doc>
            <type name="PreferencesGroup" c:type="HdyPreferencesGroup*"/>
          </instance-parameter>
          <parameter name="title" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-group.c"
                 line="333">the title</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="description"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-group.c"
             line="242">The description for this group of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-group.c"
             line="256">The title for this group of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="PreferencesGroupClass"
            c:type="HdyPreferencesGroupClass"
            glib:is-gtype-struct-for="PreferencesGroup">
      <source-position filename="../src/hdy-preferences-group.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-group.h"
             line="26">The parent class</doc>
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesPage"
           c:symbol-prefix="preferences_page"
           c:type="HdyPreferencesPage"
           parent="Gtk.Bin"
           glib:type-name="HdyPreferencesPage"
           glib:get-type="hdy_preferences_page_get_type"
           glib:type-struct="PreferencesPageClass">
      <source-position filename="../src/hdy-preferences-page.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_preferences_page_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-page.c"
             line="214">Creates a new #HdyPreferencesPage.</doc>
        <source-position filename="../src/hdy-preferences-page.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-page.c"
               line="219">a new #HdyPreferencesPage</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_icon_name"
              c:identifier="hdy_preferences_page_get_icon_name"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-page.c"
             line="229">Gets the icon name for @self, or %NULL.</doc>
        <source-position filename="../src/hdy-preferences-page.h" line="40"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-page.c"
               line="235">the icon name for @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-page.c"
                 line="231">a #HdyPreferencesPage</doc>
            <type name="PreferencesPage" c:type="HdyPreferencesPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_preferences_page_get_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-page.c"
             line="279">Gets the title of @self, or %NULL.</doc>
        <source-position filename="../src/hdy-preferences-page.h" line="46"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-page.c"
               line="285">the title of the @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-page.c"
                 line="281">a #HdyPreferencesPage</doc>
            <type name="PreferencesPage" c:type="HdyPreferencesPage*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_icon_name"
              c:identifier="hdy_preferences_page_set_icon_name"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-page.c"
             line="251">Sets the icon name for @self.</doc>
        <source-position filename="../src/hdy-preferences-page.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-page.c"
                 line="253">a #HdyPreferencesPage</doc>
            <type name="PreferencesPage" c:type="HdyPreferencesPage*"/>
          </instance-parameter>
          <parameter name="icon_name"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-page.c"
                 line="254">the icon name, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_preferences_page_set_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-page.c"
             line="301">Sets the title of @self.</doc>
        <source-position filename="../src/hdy-preferences-page.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-page.c"
                 line="303">a #HdyPreferencesPage</doc>
            <type name="PreferencesPage" c:type="HdyPreferencesPage*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-page.c"
                 line="304">the title of the page, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="icon-name"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-page.c"
             line="170">The icon name for this page of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-page.c"
             line="184">The title for this page of preferences.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="PreferencesPageClass"
            c:type="HdyPreferencesPageClass"
            glib:is-gtype-struct-for="PreferencesPage">
      <source-position filename="../src/hdy-preferences-page.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-page.h"
             line="26">The parent class</doc>
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesRow"
           c:symbol-prefix="preferences_row"
           c:type="HdyPreferencesRow"
           parent="Gtk.ListBoxRow"
           glib:type-name="HdyPreferencesRow"
           glib:get-type="hdy_preferences_row_get_type"
           glib:type-struct="PreferencesRowClass">
      <source-position filename="../src/hdy-preferences-row.h" line="34"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Actionable"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_preferences_row_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-row.c"
             line="143">Creates a new #HdyPreferencesRow.</doc>
        <source-position filename="../src/hdy-preferences-row.h" line="37"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-row.c"
               line="148">a new #HdyPreferencesRow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_title"
              c:identifier="hdy_preferences_row_get_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-row.c"
             line="158">Gets the title of the preference represented by @self.</doc>
        <source-position filename="../src/hdy-preferences-row.h" line="40"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-row.c"
               line="164">the title of the preference represented
         by @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-row.c"
                 line="160">a #HdyPreferencesRow</doc>
            <type name="PreferencesRow" c:type="HdyPreferencesRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_use_underline"
              c:identifier="hdy_preferences_row_get_use_underline"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-row.c"
             line="209">Gets whether an embedded underline in the text of the title indicates a
mnemonic. See hdy_preferences_row_set_use_underline().</doc>
        <source-position filename="../src/hdy-preferences-row.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-row.c"
               line="216">%TRUE if an embedded underline in the title indicates the mnemonic
         accelerator keys.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-row.c"
                 line="211">a #HdyPreferencesRow</doc>
            <type name="PreferencesRow" c:type="HdyPreferencesRow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_preferences_row_set_title"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-row.c"
             line="181">Sets the title of the preference represented by @self.</doc>
        <source-position filename="../src/hdy-preferences-row.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-row.c"
                 line="183">a #HdyPreferencesRow</doc>
            <type name="PreferencesRow" c:type="HdyPreferencesRow*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-row.c"
                 line="184">the title, or %NULL.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_use_underline"
              c:identifier="hdy_preferences_row_set_use_underline"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-row.c"
             line="233">If true, an underline in the text of the title indicates the next character
should be used for the mnemonic accelerator key.</doc>
        <source-position filename="../src/hdy-preferences-row.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-row.c"
                 line="235">a #HdyPreferencesRow</doc>
            <type name="PreferencesRow" c:type="HdyPreferencesRow*"/>
          </instance-parameter>
          <parameter name="use_underline" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-row.c"
                 line="236">%TRUE if underlines in the text indicate mnemonics</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="title"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-row.c"
             line="106">The title of the preference represented by this row.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="use-underline"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-row.c"
             line="120">Whether an embedded underline in the text of the title indicates a
mnemonic.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.ListBoxRow" c:type="GtkListBoxRow"/>
      </field>
    </class>
    <record name="PreferencesRowClass"
            c:type="HdyPreferencesRowClass"
            glib:is-gtype-struct-for="PreferencesRow">
      <source-position filename="../src/hdy-preferences-row.h" line="34"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-row.h"
             line="26">The parent class</doc>
        <type name="Gtk.ListBoxRowClass" c:type="GtkListBoxRowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="PreferencesWindow"
           c:symbol-prefix="preferences_window"
           c:type="HdyPreferencesWindow"
           parent="Window"
           glib:type-name="HdyPreferencesWindow"
           glib:get-type="hdy_preferences_window_get_type"
           glib:type-struct="PreferencesWindowClass">
      <source-position filename="../src/hdy-preferences-window.h" line="35"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_preferences_window_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="541">Creates a new #HdyPreferencesWindow.</doc>
        <source-position filename="../src/hdy-preferences-window.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-window.c"
               line="546">a new #HdyPreferencesWindow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="close_subpage"
              c:identifier="hdy_preferences_window_close_subpage"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="699">Closes the current subpage to return back to the preferences, if there is no
presented subpage, this does nothing.</doc>
        <source-position filename="../src/hdy-preferences-window.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="701">a #HdyPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_can_swipe_back"
              c:identifier="hdy_preferences_window_get_can_swipe_back"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="640">Returns whether or not @self allows switching from a subpage to the
preferences via a swipe gesture.</doc>
        <source-position filename="../src/hdy-preferences-window.h" line="47"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-window.c"
               line="647">%TRUE if back swipe is enabled.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="642">a #HdyPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_search_enabled"
              c:identifier="hdy_preferences_window_get_search_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="556">Gets whether search is enabled for @self.</doc>
        <source-position filename="../src/hdy-preferences-window.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-preferences-window.c"
               line="562">whether search is enabled for @self.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="558">a #HdyPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="present_subpage"
              c:identifier="hdy_preferences_window_present_subpage"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="663">Sets @subpage as the window's subpage and present it.
The transition can be cancelled by the user, in which case visible child will
change back to the previously visible child.</doc>
        <source-position filename="../src/hdy-preferences-window.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="665">a #HdyPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="subpage" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="666">the subpage</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_can_swipe_back"
              c:identifier="hdy_preferences_window_set_can_swipe_back"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="610">Sets whether or not @self allows switching from a subpage to the preferences
via a swipe gesture.</doc>
        <source-position filename="../src/hdy-preferences-window.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="612">a #HdyPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="can_swipe_back" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="613">the new value</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_enabled"
              c:identifier="hdy_preferences_window_set_search_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="578">Sets whether search is enabled for @self.</doc>
        <source-position filename="../src/hdy-preferences-window.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="580">a #HdyPreferencesWindow</doc>
            <type name="PreferencesWindow" c:type="HdyPreferencesWindow*"/>
          </instance-parameter>
          <parameter name="search_enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-preferences-window.c"
                 line="581">%TRUE to enable search, %FALSE to disable it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="can-swipe-back"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="488">Whether or not the window allows closing the subpage via a swipe gesture.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="search-enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.c"
             line="474">Whether search is enabled.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Window" c:type="HdyWindow"/>
      </field>
    </class>
    <record name="PreferencesWindowClass"
            c:type="HdyPreferencesWindowClass"
            glib:is-gtype-struct-for="PreferencesWindow">
      <source-position filename="../src/hdy-preferences-window.h" line="35"/>
      <field name="parent_class">
        <doc xml:space="preserve"
             filename="../src/hdy-preferences-window.h"
             line="27">The parent class</doc>
        <type name="WindowClass" c:type="HdyWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="SearchBar"
           c:symbol-prefix="search_bar"
           c:type="HdySearchBar"
           parent="Gtk.Bin"
           glib:type-name="HdySearchBar"
           glib:get-type="hdy_search_bar_get_type"
           glib:type-struct="SearchBarClass">
      <source-position filename="../src/hdy-search-bar.h" line="30"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_search_bar_new"
                   version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="504">Creates a #HdySearchBar. You will need to tell it about
which widget is going to be your text entry using
hdy_search_bar_connect_entry().</doc>
        <source-position filename="../src/hdy-search-bar.h" line="33"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-search-bar.c"
               line="511">a new #HdySearchBar</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="connect_entry"
              c:identifier="hdy_search_bar_connect_entry"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="548">Connects the #GtkEntry widget passed as the one to be used in
this search bar. The entry should be a descendant of the search bar.
This is only required if the entry isn’t the direct child of the
search bar (as in our main example).</doc>
        <source-position filename="../src/hdy-search-bar.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="550">a #HdySearchBar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
          <parameter name="entry" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="551">a #GtkEntry</doc>
            <type name="Gtk.Entry" c:type="GtkEntry*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_search_mode"
              c:identifier="hdy_search_bar_get_search_mode"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="570">Returns whether the search mode is on or off.</doc>
        <source-position filename="../src/hdy-search-bar.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-search-bar.c"
               line="576">whether search mode is toggled on</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="572">a #HdySearchBar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_show_close_button"
              c:identifier="hdy_search_bar_get_show_close_button"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="610">Returns whether the close button is shown.</doc>
        <source-position filename="../src/hdy-search-bar.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-search-bar.c"
               line="616">whether the close button is shown</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="612">a #HdySearchBar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="handle_event"
              c:identifier="hdy_search_bar_handle_event"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="205">This function should be called when the top-level
window which contains the search bar received a key event.

If the key event is handled by the search bar, the bar will
be shown, the entry populated with the entered text and %GDK_EVENT_STOP
will be returned. The caller should ensure that events are
not propagated further.

If no entry has been connected to the search bar, using
hdy_search_bar_connect_entry(), this function will return
immediately with a warning.

## Showing the search bar on key presses

|[&lt;!-- language="C" --&gt;
static gboolean
on_key_press_event (GtkWidget *widget,
                    GdkEvent  *event,
                    gpointer   user_data)
{
  HdySearchBar *bar = HDY_SEARCH_BAR (user_data);
  return hdy_search_bar_handle_event (self, event);
}

static void
create_toplevel (void)
{
  GtkWidget *window = gtk_window_new (GTK_WINDOW_TOPLEVEL);
  GtkWindow *search_bar = hdy_search_bar_new ();

 // Add more widgets to the window...

  g_signal_connect (window,
                   "key-press-event",
                    G_CALLBACK (on_key_press_event),
                    search_bar);
}
]|</doc>
        <source-position filename="../src/hdy-search-bar.h" line="48"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-search-bar.c"
               line="249">%GDK_EVENT_STOP if the key press event resulted
    in text being entered in the search entry (and revealing
    the search bar if necessary), %GDK_EVENT_PROPAGATE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="207">a #HdySearchBar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="208">a #GdkEvent containing key press events</doc>
            <type name="Gdk.Event" c:type="GdkEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_search_mode"
              c:identifier="hdy_search_bar_set_search_mode"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="590">Switches the search mode on or off.</doc>
        <source-position filename="../src/hdy-search-bar.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="592">a #HdySearchBar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
          <parameter name="search_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="593">the new state of the search mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_show_close_button"
              c:identifier="hdy_search_bar_set_show_close_button"
              version="0.0.6">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="630">Shows or hides the close button. Applications that
already have a “search” toggle button should not show a close
button in their search bar, as it duplicates the role of the
toggle button.</doc>
        <source-position filename="../src/hdy-search-bar.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="632">a #HdySearchBar</doc>
            <type name="SearchBar" c:type="HdySearchBar*"/>
          </instance-parameter>
          <parameter name="visible" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-search-bar.c"
                 line="633">whether the close button will be shown or not</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="search-mode-enabled"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="442">Whether the search mode is on and the search bar shown.

See hdy_search_bar_set_search_mode() for details.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="show-close-button"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-search-bar.c"
             line="456">Whether to show the close button in the toolbar.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="Gtk.Bin" c:type="GtkBin"/>
      </field>
    </class>
    <record name="SearchBarClass"
            c:type="HdySearchBarClass"
            glib:is-gtype-struct-for="SearchBar">
      <source-position filename="../src/hdy-search-bar.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="Squeezer"
           c:symbol-prefix="squeezer"
           c:type="HdySqueezer"
           parent="Gtk.Container"
           glib:type-name="HdySqueezer"
           glib:get-type="hdy_squeezer_get_type"
           glib:type-struct="SqueezerClass">
      <source-position filename="../src/hdy-squeezer.h" line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new" c:identifier="hdy_squeezer_new">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1203">Creates a new #HdySqueezer container.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1208">a new #HdySqueezer</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_child_enabled"
              c:identifier="hdy_squeezer_get_child_enabled">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1428">Gets whether @child is enabled.

See hdy_squeezer_set_child_enabled().</doc>
        <source-position filename="../src/hdy-squeezer.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1437">%TRUE if @child is enabled, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1430">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1431">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_homogeneous"
              c:identifier="hdy_squeezer_get_homogeneous"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1216">Gets whether @self is homogeneous.

See hdy_squeezer_set_homogeneous().</doc>
        <source-position filename="../src/hdy-squeezer.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1224">%TRUE if @self is homogeneous, %FALSE is not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1218">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_interpolate_size"
              c:identifier="hdy_squeezer_get_interpolate_size"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1363">Gets whether @self should interpolate its size on visible child change.

See hdy_squeezer_set_interpolate_size().</doc>
        <source-position filename="../src/hdy-squeezer.h" line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1371">%TRUE if @self interpolates its size on visible child change, %FALSE if not</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1365">A #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_duration"
              c:identifier="hdy_squeezer_get_transition_duration">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1268">Gets the amount of time (in milliseconds) that transitions between children
in @self will take.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="40"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1275">the transition duration</doc>
          <type name="guint" c:type="guint"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1270">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_running"
              c:identifier="hdy_squeezer_get_transition_running">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1347">Gets whether @self is currently in a transition from one child to another.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="52"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1353">%TRUE if the transition is currently running, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1349">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transition_type"
              c:identifier="hdy_squeezer_get_transition_type">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1305">Gets the type of animation that will be used for transitions between children
in @self.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="46"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1312">the current transition type of @self</doc>
          <type name="SqueezerTransitionType"
                c:type="HdySqueezerTransitionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1307">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_visible_child"
              c:identifier="hdy_squeezer_get_visible_child">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1411">Gets the currently visible child of @self, or %NULL if there are no visible
children.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="61"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1418">the visible child of the #HdySqueezer</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1413">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_xalign"
              c:identifier="hdy_squeezer_get_xalign"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1492">Gets the #HdySqueezer:xalign property for @self.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="72"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1498">the xalign property</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1494">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_yalign"
              c:identifier="hdy_squeezer_get_yalign"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1535">Gets the #HdySqueezer:yalign property for @self.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="78"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-squeezer.c"
               line="1541">the yalign property</doc>
          <type name="gfloat" c:type="gfloat"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1537">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_child_enabled"
              c:identifier="hdy_squeezer_set_child_enabled">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1455">Make @self enable or disable @child. If a child is disabled, it will be
ignored when looking for the child fitting the available size best. This
allows to programmatically and prematurely hide a child of @self even if it
fits in the available space.

This can be used e.g. to ensure a certain child is hidden below a certain
window width, or any other constraint you find suitable.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1457">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="child" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1458">a child of @self</doc>
            <type name="Gtk.Widget" c:type="GtkWidget*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1459">%TRUE to enable the child, %FALSE to disable it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_homogeneous"
              c:identifier="hdy_squeezer_set_homogeneous"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1236">Sets @self to be homogeneous or not. If it is homogeneous, @self will request
the same size for all its children for its opposite orientation, e.g. if
@self is oriented horizontally and is homogeneous, it will request the same
height for all its children. If it isn't, @self may change size when a
different child becomes visible.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1238">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="homogeneous" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1239">%TRUE to make @self homogeneous</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_interpolate_size"
              c:identifier="hdy_squeezer_set_interpolate_size"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1383">Sets whether or not @self will interpolate the size of its opposing
orientation when changing the visible child. If %TRUE, @self will interpolate
its size between the one of the previous visible child and the one of the new
visible child, according to the set transition duration and the orientation,
e.g. if @self is horizontal, it will interpolate the its height.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1385">A #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="interpolate_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1386">%TRUE to interpolate the size</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_duration"
              c:identifier="hdy_squeezer_set_transition_duration">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1285">Sets the duration that transitions between children in @self will take.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1287">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1288">the new duration, in milliseconds</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transition_type"
              c:identifier="hdy_squeezer_set_transition_type">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1322">Sets the type of animation that will be used for transitions between children
in @self. Available types include various kinds of fades and slides.

The transition type can be changed without problems at runtime, so it is
possible to change the animation based on the child that is about to become
current.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1324">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="transition" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1325">the new transition type</doc>
            <type name="SqueezerTransitionType"
                  c:type="HdySqueezerTransitionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_xalign"
              c:identifier="hdy_squeezer_set_xalign"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1510">Sets the #HdySqueezer:xalign property for @self.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1512">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="xalign" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1513">the new xalign value, between 0 and 1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_yalign"
              c:identifier="hdy_squeezer_set_yalign"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1553">Sets the #HdySqueezer:yalign property for @self.</doc>
        <source-position filename="../src/hdy-squeezer.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1555">a #HdySqueezer</doc>
            <type name="Squeezer" c:type="HdySqueezer*"/>
          </instance-parameter>
          <parameter name="yalign" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-squeezer.c"
                 line="1556">the new yalign value, between 0 and 1</doc>
            <type name="gfloat" c:type="gfloat"/>
          </parameter>
        </parameters>
      </method>
      <property name="homogeneous" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="interpolate-size" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-duration"
                writable="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="transition-running" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="transition-type" writable="1" transfer-ownership="none">
        <type name="SqueezerTransitionType"/>
      </property>
      <property name="visible-child" transfer-ownership="none">
        <type name="Gtk.Widget"/>
      </property>
      <property name="xalign"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1132">The xalign property determines the horizontal aligment of the children
inside the squeezer's size allocation.
Compare this to #GtkWidget:halign, which determines how the squeezer's size
allocation is positioned in the space available for the squeezer.
The range goes from 0 (start) to 1 (end).

This will affect the position of children too wide to fit in the squeezer
as they are fading out.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
      <property name="yalign"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="1154">The yalign property determines the vertical aligment of the children inside
the squeezer's size allocation.
Compare this to #GtkWidget:valign, which determines how the squeezer's size
allocation is positioned in the space available for the squeezer.
The range goes from 0 (top) to 1 (bottom).

This will affect the position of children too tall to fit in the squeezer
as they are fading out.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </property>
    </class>
    <record name="SqueezerClass"
            c:type="HdySqueezerClass"
            glib:is-gtype-struct-for="Squeezer">
      <source-position filename="../src/hdy-squeezer.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.ContainerClass" c:type="GtkContainerClass"/>
      </field>
    </record>
    <enumeration name="SqueezerTransitionType"
                 glib:type-name="HdySqueezerTransitionType"
                 glib:get-type="hdy_squeezer_transition_type_get_type"
                 c:type="HdySqueezerTransitionType">
      <doc xml:space="preserve"
           filename="../src/hdy-squeezer.c"
           line="45">These enumeration values describe the possible transitions between children
in a #HdySqueezer widget.</doc>
      <member name="none"
              value="0"
              c:identifier="HDY_SQUEEZER_TRANSITION_TYPE_NONE"
              glib:nick="none">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="47">No transition</doc>
      </member>
      <member name="crossfade"
              value="1"
              c:identifier="HDY_SQUEEZER_TRANSITION_TYPE_CROSSFADE"
              glib:nick="crossfade">
        <doc xml:space="preserve"
             filename="../src/hdy-squeezer.c"
             line="48">A cross-fade</doc>
      </member>
    </enumeration>
    <class name="SwipeGroup"
           c:symbol-prefix="swipe_group"
           c:type="HdySwipeGroup"
           parent="GObject.Object"
           glib:type-name="HdySwipeGroup"
           glib:get-type="hdy_swipe_group_get_type"
           glib:type-struct="SwipeGroupClass">
      <source-position filename="../src/hdy-swipe-group.h" line="23"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_swipe_group_new"
                   version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-group.c"
             line="90">Create a new #HdySwipeGroup object.</doc>
        <source-position filename="../src/hdy-swipe-group.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-swipe-group.c"
               line="95">The newly created #HdySwipeGroup object</doc>
          <type name="SwipeGroup" c:type="HdySwipeGroup*"/>
        </return-value>
      </constructor>
      <method name="add_swipeable"
              c:identifier="hdy_swipe_group_add_swipeable"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-group.c"
             line="212">When the widget is destroyed or no longer referenced elsewhere, it will
be removed from the swipe group.</doc>
        <source-position filename="../src/hdy-swipe-group.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-group.c"
                 line="214">a #HdySwipeGroup</doc>
            <type name="SwipeGroup" c:type="HdySwipeGroup*"/>
          </instance-parameter>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-group.c"
                 line="215">the #HdySwipeable to add</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipeables"
              c:identifier="hdy_swipe_group_get_swipeables"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-group.c"
             line="278">Returns the list of swipeables associated with @self.</doc>
        <source-position filename="../src/hdy-swipe-group.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipe-group.c"
               line="284">a #GSList of
  swipeables. The list is owned by libhandy and should not be modified.</doc>
          <type name="GLib.SList" c:type="GSList*">
            <type name="Swipeable"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-group.c"
                 line="280">a #HdySwipeGroup</doc>
            <type name="SwipeGroup" c:type="HdySwipeGroup*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove_swipeable"
              c:identifier="hdy_swipe_group_remove_swipeable"
              version="0.0.12">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-group.c"
             line="248">Removes a widget from a #HdySwipeGroup.</doc>
        <source-position filename="../src/hdy-swipe-group.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-group.c"
                 line="250">a #HdySwipeGroup</doc>
            <type name="SwipeGroup" c:type="HdySwipeGroup*"/>
          </instance-parameter>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-group.c"
                 line="251">the #HdySwipeable to remove</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="SwipeGroupClass"
            c:type="HdySwipeGroupClass"
            glib:is-gtype-struct-for="SwipeGroup">
      <source-position filename="../src/hdy-swipe-group.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SwipeTracker"
           c:symbol-prefix="swipe_tracker"
           c:type="HdySwipeTracker"
           parent="GObject.Object"
           glib:type-name="HdySwipeTracker"
           glib:get-type="hdy_swipe_tracker_get_type"
           glib:type-struct="SwipeTrackerClass">
      <source-position filename="../src/hdy-swipe-tracker.h" line="23"/>
      <implements name="Gtk.Orientable"/>
      <constructor name="new"
                   c:identifier="hdy_swipe_tracker_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="886">Create a new #HdySwipeTracker object on @widget.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-swipe-tracker.c"
               line="892">the newly created #HdySwipeTracker object</doc>
          <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
        </return-value>
        <parameters>
          <parameter name="swipeable" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="888">a #GtkWidget to add the tracker on</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_allow_mouse_drag"
              c:identifier="hdy_swipe_tracker_get_allow_mouse_drag"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="1015">Get whether @self can be dragged with mouse pointer.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="44"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipe-tracker.c"
               line="1021">%TRUE is mouse dragging is allowed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="1017">a #HdySwipeTracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_enabled"
              c:identifier="hdy_swipe_tracker_get_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="924">Get whether @self is enabled. When it's not enabled, no events will be
processed. Generally widgets will want to expose this via a property.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipe-tracker.c"
               line="931">%TRUE if @self is enabled</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="926">a #HdySwipeTracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reversed"
              c:identifier="hdy_swipe_tracker_get_reversed"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="972">Get whether @self is reversing the swipe direction.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="38"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipe-tracker.c"
               line="978">%TRUE is the direction is reversed</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="974">a #HdySwipeTracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_swipeable"
              c:identifier="hdy_swipe_tracker_get_swipeable"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="906">Get @self's swipeable widget.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="29"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipe-tracker.c"
               line="912">the swipeable widget</doc>
          <type name="Swipeable" c:type="HdySwipeable*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="908">a #HdySwipeTracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_allow_mouse_drag"
              c:identifier="hdy_swipe_tracker_set_allow_mouse_drag"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="1033">Set whether @self can be dragged with mouse pointer. This should usually be
%FALSE.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="1035">a #HdySwipeTracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="allow_mouse_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="1036">whether to allow mouse dragging</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enabled"
              c:identifier="hdy_swipe_tracker_set_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="943">Set whether @self is enabled. When it's not enabled, no events will be
processed. Usually widgets will want to expose this via a property.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="945">a #HdySwipeTracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="946">whether to enable to swipe tracker</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reversed"
              c:identifier="hdy_swipe_tracker_set_reversed"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="990">Set whether to reverse the swipe direction. If @self is horizontal,
can be used for supporting RTL text direction.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="992">a #HdySwipeTracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="reversed" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="993">whether to reverse the swipe direction</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="shift_position"
              c:identifier="hdy_swipe_tracker_shift_position"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="1062">Move the current progress value by @delta. This can be used to adjust the
current position if snap points move during the gesture.</doc>
        <source-position filename="../src/hdy-swipe-tracker.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="1064">a #HdySwipeTracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </instance-parameter>
          <parameter name="delta" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="1065">the position delta</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <property name="allow-mouse-drag"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="793">Whether to allow dragging with mouse pointer. This should usually be
%FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="763">Whether the swipe tracker is enabled. When it's not enabled, no events
will be processed. Usually widgets will want to expose this via a property.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="reversed"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="778">Whether to reverse the swipe direction. If the swipe tracker is horizontal,
it can be used for supporting RTL text direction.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="swipeable"
                version="1.0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="749">The widget the swipe tracker is attached to. Must not be %NULL.</doc>
        <type name="Swipeable"/>
      </property>
      <glib:signal name="begin-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="814">This signal is emitted when a possible swipe is detected.

The @direction value can be used to restrict the swipe to a certain
direction.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="817">The direction of the swipe</doc>
            <type name="NavigationDirection"/>
          </parameter>
          <parameter name="direct" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="818">%TRUE if the swipe is directly triggered by a gesture,
  %FALSE if it's triggered via a #HdySwipeGroup</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="end-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="857">This signal is emitted as soon as the gesture has stopped.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="860">Snap-back animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
          <parameter name="to" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="861">The progress value to animate to</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="update-swipe" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipe-tracker.c"
             line="838">This signal is emitted every time the progress value changes.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="progress" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipe-tracker.c"
                 line="841">The current animation progress value</doc>
            <type name="gdouble" c:type="gdouble"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SwipeTrackerClass"
            c:type="HdySwipeTrackerClass"
            glib:is-gtype-struct-for="SwipeTracker">
      <source-position filename="../src/hdy-swipe-tracker.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="Swipeable"
               c:symbol-prefix="swipeable"
               c:type="HdySwipeable"
               glib:type-name="HdySwipeable"
               glib:get-type="hdy_swipeable_get_type"
               glib:type-struct="SwipeableInterface">
      <source-position filename="../src/hdy-swipeable.h" line="62"/>
      <prerequisite name="Gtk.Widget"/>
      <virtual-method name="get_cancel_progress"
                      invoker="get_cancel_progress"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="207">Gets the progress @self will snap back to after the gesture is canceled.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="54"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="213">the cancel progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="209">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_distance" invoker="get_distance" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="133">Gets the swipe distance of @self. This corresponds to how many pixels
1 unit represents.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="50"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="140">the swipe distance in pixels</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="135">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_progress" invoker="get_progress" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="184">Gets the current progress of @self</doc>
        <source-position filename="../src/hdy-swipeable.h" line="53"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="190">the current progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="186">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_snap_points"
                      invoker="get_snap_points"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="157">Gets the snap points of @self. Each snap point represents a progress value
that is considered acceptable to end the swipe on.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="51"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="165">the snap points of
    @self. The array must be freed with g_free().</doc>
          <array length="0" zero-terminated="0" c:type="gdouble*">
            <type name="gdouble" c:type="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="159">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="n_snap_points"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="160">location to return the number of the snap points</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_swipe_area"
                      invoker="get_swipe_area"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="230">Gets the area @self can start a swipe from for the given direction and
gesture type.
This can be used to restrict swipes to only be possible from a certain area,
for example, to only allow edge swipes, or to have a draggable element and
ignore swipes elsewhere.

Swipe area is only considered for direct swipes (as in, not initiated by
#HdySwipeGroup).

If not implemented, the default implementation returns the allocation of
@self, allowing swipes from anywhere.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="232">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="navigation_direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="233">the direction of the swipe</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
          <parameter name="is_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="234">whether the swipe is caused by a dragging gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="235">a pointer to a #GdkRectangle to store the swipe area</doc>
            <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_swipe_tracker"
                      invoker="get_swipe_tracker"
                      version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="110">Gets the #HdySwipeTracker used by this swipeable widget.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="116">the swipe tracker</doc>
          <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="112">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="switch_child" invoker="switch_child" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="62">See HdySwipeable::child-switched.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="64">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="65">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="66">Animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="emit_child_switched"
              c:identifier="hdy_swipeable_emit_child_switched"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="87">Emits HdySwipeable::child-switched signal. This should be called when the
widget switches visible child widget.

@duration can be 0 if the child is switched without animation.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="89">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="90">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="91">Animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cancel_progress"
              c:identifier="hdy_swipeable_get_cancel_progress"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="207">Gets the progress @self will snap back to after the gesture is canceled.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="84"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="213">the cancel progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="209">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_distance"
              c:identifier="hdy_swipeable_get_distance"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="133">Gets the swipe distance of @self. This corresponds to how many pixels
1 unit represents.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="77"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="140">the swipe distance in pixels</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="135">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_progress"
              c:identifier="hdy_swipeable_get_progress"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="184">Gets the current progress of @self</doc>
        <source-position filename="../src/hdy-swipeable.h" line="82"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="190">the current progress, unitless</doc>
          <type name="gdouble" c:type="gdouble"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="186">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_snap_points"
              c:identifier="hdy_swipeable_get_snap_points"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="157">Gets the snap points of @self. Each snap point represents a progress value
that is considered acceptable to end the swipe on.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="79"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="165">the snap points of
    @self. The array must be freed with g_free().</doc>
          <array length="0" zero-terminated="0" c:type="gdouble*">
            <type name="gdouble" c:type="gdouble"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="159">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="n_snap_points"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="160">location to return the number of the snap points</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipe_area"
              c:identifier="hdy_swipeable_get_swipe_area"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="230">Gets the area @self can start a swipe from for the given direction and
gesture type.
This can be used to restrict swipes to only be possible from a certain area,
for example, to only allow edge swipes, or to have a draggable element and
ignore swipes elsewhere.

Swipe area is only considered for direct swipes (as in, not initiated by
#HdySwipeGroup).

If not implemented, the default implementation returns the allocation of
@self, allowing swipes from anywhere.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="232">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="navigation_direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="233">the direction of the swipe</doc>
            <type name="NavigationDirection" c:type="HdyNavigationDirection"/>
          </parameter>
          <parameter name="is_drag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="234">whether the swipe is caused by a dragging gesture</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="rect"
                     direction="out"
                     caller-allocates="1"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="235">a pointer to a #GdkRectangle to store the swipe area</doc>
            <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_swipe_tracker"
              c:identifier="hdy_swipeable_get_swipe_tracker"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="110">Gets the #HdySwipeTracker used by this swipeable widget.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="75"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-swipeable.c"
               line="116">the swipe tracker</doc>
          <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="112">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="switch_child"
              c:identifier="hdy_swipeable_switch_child"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="62">See HdySwipeable::child-switched.</doc>
        <source-position filename="../src/hdy-swipeable.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="64">a #HdySwipeable</doc>
            <type name="Swipeable" c:type="HdySwipeable*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="65">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="66">Animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="child-switched" when="first" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.c"
             line="37">This signal should be emitted when the widget's visible child is changed.

@duration can be 0 if the child is switched without animation.

This is used by #HdySwipeGroup, applications should not connect to it.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="40">the index of the child to switch to</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="41">Animation duration in milliseconds</doc>
            <type name="gint64" c:type="gint64"/>
          </parameter>
        </parameters>
      </glib:signal>
    </interface>
    <record name="SwipeableInterface"
            c:type="HdySwipeableInterface"
            glib:is-gtype-struct-for="Swipeable"
            version="1.0">
      <doc xml:space="preserve"
           filename="../src/hdy-swipeable.h"
           line="26">An interface for swipeable widgets.</doc>
      <source-position filename="../src/hdy-swipeable.h" line="62"/>
      <field name="parent">
        <doc xml:space="preserve"
             filename="../src/hdy-swipeable.h"
             line="28">The parent interface.</doc>
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="switch_child">
        <callback name="switch_child">
          <source-position filename="../src/hdy-swipeable.h" line="45"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="64">a #HdySwipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="65">the index of the child to switch to</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="duration" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="66">Animation duration in milliseconds</doc>
              <type name="gint64" c:type="gint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_swipe_tracker">
        <callback name="get_swipe_tracker">
          <source-position filename="../src/hdy-swipeable.h" line="49"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="116">the swipe tracker</doc>
            <type name="SwipeTracker" c:type="HdySwipeTracker*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="112">a #HdySwipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_distance">
        <callback name="get_distance">
          <source-position filename="../src/hdy-swipeable.h" line="50"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="140">the swipe distance in pixels</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="135">a #HdySwipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_snap_points">
        <callback name="get_snap_points">
          <source-position filename="../src/hdy-swipeable.h" line="51"/>
          <return-value transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="165">the snap points of
    @self. The array must be freed with g_free().</doc>
            <array length="1" zero-terminated="0" c:type="gdouble*">
              <type name="gdouble" c:type="gdouble"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="159">a #HdySwipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
            <parameter name="n_snap_points"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="160">location to return the number of the snap points</doc>
              <type name="gint" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_progress">
        <callback name="get_progress">
          <source-position filename="../src/hdy-swipeable.h" line="53"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="190">the current progress, unitless</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="186">a #HdySwipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_cancel_progress">
        <callback name="get_cancel_progress">
          <source-position filename="../src/hdy-swipeable.h" line="54"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-swipeable.c"
                 line="213">the cancel progress, unitless</doc>
            <type name="gdouble" c:type="gdouble"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="209">a #HdySwipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_swipe_area">
        <callback name="get_swipe_area">
          <source-position filename="../src/hdy-swipeable.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="232">a #HdySwipeable</doc>
              <type name="Swipeable" c:type="HdySwipeable*"/>
            </parameter>
            <parameter name="navigation_direction" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="233">the direction of the swipe</doc>
              <type name="NavigationDirection"
                    c:type="HdyNavigationDirection"/>
            </parameter>
            <parameter name="is_drag" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="234">whether the swipe is caused by a dragging gesture</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
            <parameter name="rect"
                       direction="out"
                       caller-allocates="1"
                       transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hdy-swipeable.c"
                   line="235">a pointer to a #GdkRectangle to store the swipe area</doc>
              <type name="Gdk.Rectangle" c:type="GdkRectangle*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="TitleBar"
           c:symbol-prefix="title_bar"
           c:type="HdyTitleBar"
           parent="Gtk.Bin"
           glib:type-name="HdyTitleBar"
           glib:get-type="hdy_title_bar_get_type"
           glib:type-struct="TitleBarClass">
      <source-position filename="../src/hdy-title-bar.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_title_bar_new">
        <doc xml:space="preserve"
             filename="../src/hdy-title-bar.c"
             line="336">Creates a new #HdyTitleBar.</doc>
        <source-position filename="../src/hdy-title-bar.h" line="25"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-title-bar.c"
               line="341">a new #HdyTitleBar</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_selection_mode"
              c:identifier="hdy_title_bar_get_selection_mode">
        <doc xml:space="preserve"
             filename="../src/hdy-title-bar.c"
             line="79">Returns whether whether @self is in selection mode.</doc>
        <source-position filename="../src/hdy-title-bar.h" line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-title-bar.c"
               line="85">%TRUE if the title bar is in selection mode</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-title-bar.c"
                 line="81">a #HdyTitleBar</doc>
            <type name="TitleBar" c:type="HdyTitleBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_selection_mode"
              c:identifier="hdy_title_bar_set_selection_mode">
        <doc xml:space="preserve"
             filename="../src/hdy-title-bar.c"
             line="47">Sets whether @self is in selection mode.</doc>
        <source-position filename="../src/hdy-title-bar.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-title-bar.c"
                 line="49">a #HdyTitleBar</doc>
            <type name="TitleBar" c:type="HdyTitleBar*"/>
          </instance-parameter>
          <parameter name="selection_mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-title-bar.c"
                 line="50">%TRUE to enable the selection mode</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="selection-mode" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="TitleBarClass"
            c:type="HdyTitleBarClass"
            glib:is-gtype-struct-for="TitleBar">
      <source-position filename="../src/hdy-title-bar.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <class name="ValueObject"
           c:symbol-prefix="value_object"
           c:type="HdyValueObject"
           parent="GObject.Object"
           glib:type-name="HdyValueObject"
           glib:get-type="hdy_value_object_get_type"
           glib:type-struct="ValueObjectClass">
      <source-position filename="../src/hdy-value-object.h" line="23"/>
      <constructor name="new"
                   c:identifier="hdy_value_object_new"
                   version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/hdy-value-object.c"
             line="40">Create a new #HdyValueObject.</doc>
        <source-position filename="../src/hdy-value-object.h" line="26"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-value-object.c"
               line="46">a new #HdyValueObject</doc>
          <type name="ValueObject" c:type="HdyValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="42">the #GValue to store</doc>
            <type name="GObject.Value" c:type="const GValue*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_collect"
                   c:identifier="hdy_value_object_new_collect"
                   version="0.0.8"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="../src/hdy-value-object.c"
             line="57">Creates a new #HdyValueObject. This is a convenience method which uses
the G_VALUE_COLLECT() macro internally.</doc>
        <source-position filename="../src/hdy-value-object.h" line="28"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-value-object.c"
               line="65">a new #HdyValueObject</doc>
          <type name="ValueObject" c:type="HdyValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="59">the #GType of the value</doc>
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="..." transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="60">the value to store</doc>
            <varargs/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_string"
                   c:identifier="hdy_value_object_new_string"
                   version="0.0.8"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="../src/hdy-value-object.c"
             line="89">Creates a new #HdyValueObject. This is a convenience method to create a
#HdyValueObject that stores a string.</doc>
        <source-position filename="../src/hdy-value-object.h" line="31"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-value-object.c"
               line="96">a new #HdyValueObject</doc>
          <type name="ValueObject" c:type="HdyValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="91">the string to store</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_take_string"
                   c:identifier="hdy_value_object_new_take_string"
                   version="0.0.8"
                   introspectable="0">
        <doc xml:space="preserve"
             filename="../src/hdy-value-object.c"
             line="109">Creates a new #HdyValueObject. This is a convenience method to create a
#HdyValueObject that stores a string taking ownership of it.</doc>
        <source-position filename="../src/hdy-value-object.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-value-object.c"
               line="116">a new #HdyValueObject</doc>
          <type name="ValueObject" c:type="HdyValueObject*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="111">the string to store</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy_value"
              c:identifier="hdy_value_object_copy_value"
              version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/hdy-value-object.c"
             line="221">Copy data from the contained #GValue into @dest.</doc>
        <source-position filename="../src/hdy-value-object.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="223">the #HdyValueObject</doc>
            <type name="ValueObject" c:type="HdyValueObject*"/>
          </instance-parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="224">#GValue with correct type to copy into</doc>
            <type name="GObject.Value" c:type="GValue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="dup_string"
              c:identifier="hdy_value_object_dup_string"
              version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/hdy-value-object.c"
             line="252">Returns a copy of the contained string if the value is of type
#G_TYPE_STRING.</doc>
        <source-position filename="../src/hdy-value-object.h" line="43"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-value-object.c"
               line="259">a copy of the contained string</doc>
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="254">the #HdyValueObject</doc>
            <type name="ValueObject" c:type="HdyValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_string"
              c:identifier="hdy_value_object_get_string"
              version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/hdy-value-object.c"
             line="237">Returns the contained string if the value is of type #G_TYPE_STRING.</doc>
        <source-position filename="../src/hdy-value-object.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-value-object.c"
               line="243">the contained string</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="239">the #HdyValueObject</doc>
            <type name="ValueObject" c:type="HdyValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_value"
              c:identifier="hdy_value_object_get_value"
              version="0.0.8">
        <doc xml:space="preserve"
             filename="../src/hdy-value-object.c"
             line="206">Return the contained value.</doc>
        <source-position filename="../src/hdy-value-object.h" line="36"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-value-object.c"
               line="212">the contained #GValue</doc>
          <type name="GObject.Value" c:type="const GValue*"/>
        </return-value>
        <parameters>
          <instance-parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-value-object.c"
                 line="208">the #HdyValueObject</doc>
            <type name="ValueObject" c:type="HdyValueObject*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="value"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GObject.Value"/>
      </property>
    </class>
    <record name="ValueObjectClass"
            c:type="HdyValueObjectClass"
            glib:is-gtype-struct-for="ValueObject">
      <source-position filename="../src/hdy-value-object.h" line="23"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="ViewSwitcher"
           c:symbol-prefix="view_switcher"
           c:type="HdyViewSwitcher"
           parent="Gtk.Bin"
           glib:type-name="HdyViewSwitcher"
           glib:get-type="hdy_view_switcher_get_type"
           glib:type-struct="ViewSwitcherClass">
      <source-position filename="../src/hdy-view-switcher.h" line="23"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_view_switcher_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="570">Creates a new #HdyViewSwitcher widget.</doc>
        <source-position filename="../src/hdy-view-switcher.h" line="32"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher.c"
               line="575">a new #HdyViewSwitcher</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_narrow_ellipsize"
              c:identifier="hdy_view_switcher_get_narrow_ellipsize"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="628">Get the ellipsizing position of the narrow mode label. See
hdy_view_switcher_set_narrow_ellipsize().</doc>
        <source-position filename="../src/hdy-view-switcher.h" line="41"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher.c"
               line="635">#PangoEllipsizeMode</doc>
          <type name="Pango.EllipsizeMode" c:type="PangoEllipsizeMode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="630">a #HdyViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_policy"
              c:identifier="hdy_view_switcher_get_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="585">Gets the policy of @self.</doc>
        <source-position filename="../src/hdy-view-switcher.h" line="35"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher.c"
               line="591">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="587">a #HdyViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="hdy_view_switcher_get_stack"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="679">Get the #GtkStack being controlled by the #HdyViewSwitcher.

See: hdy_view_switcher_set_stack()</doc>
        <source-position filename="../src/hdy-view-switcher.h" line="47"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher.c"
               line="687">the #GtkStack, or %NULL if none has been set</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="681">a #HdyViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_narrow_ellipsize"
              c:identifier="hdy_view_switcher_set_narrow_ellipsize"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="647">Set the mode used to ellipsize the text in narrow mode if there is not
enough space to render the entire string.</doc>
        <source-position filename="../src/hdy-view-switcher.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="649">a #HdyViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="650">a #PangoEllipsizeMode</doc>
            <type name="Pango.EllipsizeMode" c:type="PangoEllipsizeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="hdy_view_switcher_set_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="603">Sets the policy of @self.</doc>
        <source-position filename="../src/hdy-view-switcher.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="605">a #HdyViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="606">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="hdy_view_switcher_set_stack"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="699">Sets the #GtkStack to control.</doc>
        <source-position filename="../src/hdy-view-switcher.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="701">a #HdyViewSwitcher</doc>
            <type name="ViewSwitcher" c:type="HdyViewSwitcher*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher.c"
                 line="702">a #GtkStack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <property name="narrow-ellipsize"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="514">The preferred place to ellipsize the string, if the narrow mode label does
not have enough room to display the entire string, specified as a
#PangoEllipsizeMode.

Note that setting this property to a value other than %PANGO_ELLIPSIZE_NONE
has the side-effect that the label requests only enough space to display
the ellipsis.</doc>
        <type name="Pango.EllipsizeMode"/>
      </property>
      <property name="policy"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="499">The #HdyViewSwitcherPolicy the view switcher should use to determine which
mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="stack"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="535">The #GtkStack the view switcher controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
    </class>
    <class name="ViewSwitcherBar"
           c:symbol-prefix="view_switcher_bar"
           c:type="HdyViewSwitcherBar"
           parent="Gtk.Bin"
           glib:type-name="HdyViewSwitcherBar"
           glib:get-type="hdy_view_switcher_bar_get_type"
           glib:type-struct="ViewSwitcherBarClass">
      <source-position filename="../src/hdy-view-switcher-bar.h" line="25"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_view_switcher_bar_new"
                   version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="236">Creates a new #HdyViewSwitcherBar widget.</doc>
        <source-position filename="../src/hdy-view-switcher-bar.h" line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-bar.c"
               line="241">a new #HdyViewSwitcherBar</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <method name="get_policy"
              c:identifier="hdy_view_switcher_bar_get_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="251">Gets the policy of @self.</doc>
        <source-position filename="../src/hdy-view-switcher-bar.h" line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-bar.c"
               line="257">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="253">a #HdyViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_reveal"
              c:identifier="hdy_view_switcher_bar_get_reveal"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="350">Gets whether @self should be revealed or not.</doc>
        <source-position filename="../src/hdy-view-switcher-bar.h" line="43"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-bar.c"
               line="356">%TRUE if @self is revealed, %FALSE if not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="352">a #HdyViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="hdy_view_switcher_bar_get_stack"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="294">Get the #GtkStack being controlled by the #HdyViewSwitcher.</doc>
        <source-position filename="../src/hdy-view-switcher-bar.h" line="37"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-bar.c"
               line="300">the #GtkStack, or %NULL if none has been set</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="296">a #HdyViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="hdy_view_switcher_bar_set_policy"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="269">Sets the policy of @self.</doc>
        <source-position filename="../src/hdy-view-switcher-bar.h" line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="271">a #HdyViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="272">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_reveal"
              c:identifier="hdy_view_switcher_bar_set_reveal"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="368">Sets whether @self should be revealed or not.</doc>
        <source-position filename="../src/hdy-view-switcher-bar.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="370">a #HdyViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="reveal" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="371">%TRUE to reveal @self</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="hdy_view_switcher_bar_set_stack"
              version="0.0.10">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="312">Sets the #GtkStack to control.</doc>
        <source-position filename="../src/hdy-view-switcher-bar.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="314">a #HdyViewSwitcherBar</doc>
            <type name="ViewSwitcherBar" c:type="HdyViewSwitcherBar*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-bar.c"
                 line="315">a #GtkStack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <property name="policy"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="168">The #HdyViewSwitcherPolicy the #HdyViewSwitcher should use to determine
which mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="reveal"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="197">Whether the bar should be revealed or hidden.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="stack"
                version="0.0.10"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-bar.c"
             line="183">The #GtkStack the #HdyViewSwitcher controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
    </class>
    <record name="ViewSwitcherBarClass"
            c:type="HdyViewSwitcherBarClass"
            glib:is-gtype-struct-for="ViewSwitcherBar">
      <source-position filename="../src/hdy-view-switcher-bar.h" line="25"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <record name="ViewSwitcherClass"
            c:type="HdyViewSwitcherClass"
            glib:is-gtype-struct-for="ViewSwitcher">
      <source-position filename="../src/hdy-view-switcher.h" line="23"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <enumeration name="ViewSwitcherPolicy"
                 glib:type-name="HdyViewSwitcherPolicy"
                 glib:get-type="hdy_view_switcher_policy_get_type"
                 c:type="HdyViewSwitcherPolicy">
      <member name="auto"
              value="0"
              c:identifier="HDY_VIEW_SWITCHER_POLICY_AUTO"
              glib:nick="auto">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="45">Automatically adapt to the best fitting mode</doc>
      </member>
      <member name="narrow"
              value="1"
              c:identifier="HDY_VIEW_SWITCHER_POLICY_NARROW"
              glib:nick="narrow">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="46">Force the narrow mode</doc>
      </member>
      <member name="wide"
              value="2"
              c:identifier="HDY_VIEW_SWITCHER_POLICY_WIDE"
              glib:nick="wide">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher.c"
             line="47">Force the wide mode</doc>
      </member>
    </enumeration>
    <class name="ViewSwitcherTitle"
           c:symbol-prefix="view_switcher_title"
           c:type="HdyViewSwitcherTitle"
           parent="Gtk.Bin"
           glib:type-name="HdyViewSwitcherTitle"
           glib:get-type="hdy_view_switcher_title_get_type"
           glib:type-struct="ViewSwitcherTitleClass">
      <source-position filename="../src/hdy-view-switcher-title.h" line="25"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_view_switcher_title_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="333">Creates a new #HdyViewSwitcherTitle widget.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="28"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-title.c"
               line="338">a new #HdyViewSwitcherTitle</doc>
          <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
        </return-value>
      </constructor>
      <method name="get_policy"
              c:identifier="hdy_view_switcher_title_get_policy"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="348">Gets the policy of @self.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="31"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-title.c"
               line="354">the policy of @self</doc>
          <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="350">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_stack"
              c:identifier="hdy_view_switcher_title_get_stack"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="391">Get the #GtkStack being controlled by the #HdyViewSwitcher.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="37"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-title.c"
               line="397">the #GtkStack, or %NULL if none has been set</doc>
          <type name="Gtk.Stack" c:type="GtkStack*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="393">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_subtitle"
              c:identifier="hdy_view_switcher_title_get_subtitle"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="490">Gets the subtitle of @self. See hdy_view_switcher_title_set_subtitle().</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="49"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-title.c"
               line="496">the subtitle of @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="492">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title"
              c:identifier="hdy_view_switcher_title_get_title"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="447">Gets the title of @self. See hdy_view_switcher_title_set_title().</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="43"/>
        <return-value transfer-ownership="none" nullable="1">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-title.c"
               line="453">the title of @self, or %NULL.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="449">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_title_visible"
              c:identifier="hdy_view_switcher_title_get_title_visible"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="584">Get whether the title label of @self is visible.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="61"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-title.c"
               line="590">%TRUE if the title label of @self is visible, %FALSE if not.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="586">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_view_switcher_enabled"
              c:identifier="hdy_view_switcher_title_get_view_switcher_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="533">Gets whether @self's view switcher is enabled.

See hdy_view_switcher_title_set_view_switcher_enabled().</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="55"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-view-switcher-title.c"
               line="541">%TRUE if the view switcher is enabled, %FALSE otherwise.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="535">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_policy"
              c:identifier="hdy_view_switcher_title_set_policy"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="366">Sets the policy of @self.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="33"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="368">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="policy" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="369">the new policy</doc>
            <type name="ViewSwitcherPolicy" c:type="HdyViewSwitcherPolicy"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_stack"
              c:identifier="hdy_view_switcher_title_set_stack"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="409">Sets the #GtkStack to control.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="411">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="stack"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="412">a #GtkStack</doc>
            <type name="Gtk.Stack" c:type="GtkStack*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_subtitle"
              c:identifier="hdy_view_switcher_title_set_subtitle"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="508">Sets the subtitle of @self. The subtitle should give a user additional
details.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="510">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="subtitle"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="511">a subtitle, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_title"
              c:identifier="hdy_view_switcher_title_set_title"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="465">Sets the title of @self. The title should give a user additional details. A
good title should not include the application name.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="467">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="title"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="468">a title, or %NULL</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_view_switcher_enabled"
              c:identifier="hdy_view_switcher_title_set_view_switcher_enabled"
              version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="553">Make @self enable or disable its view switcher. If it is disabled, the title
will be displayed instead. This allows to programmatically and prematurely
hide the view switcher of @self even if it fits in the available space.

This can be used e.g. to ensure the view switcher is hidden below a certain
window width, or any other constraint you find suitable.</doc>
        <source-position filename="../src/hdy-view-switcher-title.h"
                         line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="555">a #HdyViewSwitcherTitle</doc>
            <type name="ViewSwitcherTitle" c:type="HdyViewSwitcherTitle*"/>
          </instance-parameter>
          <parameter name="enabled" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hdy-view-switcher-title.c"
                 line="556">%TRUE to enable the view switcher, %FALSE to disable it</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="policy"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="220">The #HdyViewSwitcherPolicy the #HdyViewSwitcher should use to determine
which mode to use.</doc>
        <type name="ViewSwitcherPolicy"/>
      </property>
      <property name="stack"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="235">The #GtkStack the #HdyViewSwitcher controls.</doc>
        <type name="Gtk.Stack"/>
      </property>
      <property name="subtitle"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="263">The subtitle of the #HdyViewSwitcher.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="249">The title of the #HdyViewSwitcher.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="title-visible" version="1.0" transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="291">Whether the bar should be revealed or hidden.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="view-switcher-enabled"
                version="1.0"
                writable="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-view-switcher-title.c"
             line="277">Whether the bar should be revealed or hidden.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ViewSwitcherTitleClass"
            c:type="HdyViewSwitcherTitleClass"
            glib:is-gtype-struct-for="ViewSwitcherTitle">
      <source-position filename="../src/hdy-view-switcher-title.h" line="25"/>
      <field name="parent_class">
        <type name="Gtk.BinClass" c:type="GtkBinClass"/>
      </field>
    </record>
    <class name="Window"
           c:symbol-prefix="window"
           c:type="HdyWindow"
           parent="Gtk.Window"
           glib:type-name="HdyWindow"
           glib:get-type="hdy_window_get_type"
           glib:type-struct="WindowClass">
      <source-position filename="../src/hdy-window.h" line="30"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new" c:identifier="hdy_window_new" version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-window.c"
             line="180">Creates a new #HdyWindow.</doc>
        <source-position filename="../src/hdy-window.h" line="33"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-window.c"
               line="185">a newly created #HdyWindow</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
      <field name="parent_instance">
        <type name="Gtk.Window" c:type="GtkWindow"/>
      </field>
    </class>
    <record name="WindowClass"
            c:type="HdyWindowClass"
            glib:is-gtype-struct-for="Window">
      <source-position filename="../src/hdy-window.h" line="30"/>
      <field name="parent_class">
        <type name="Gtk.WindowClass" c:type="GtkWindowClass"/>
      </field>
      <field name="padding" readable="0" private="1">
        <array zero-terminated="0" fixed-size="4">
          <type name="gpointer" c:type="gpointer"/>
        </array>
      </field>
    </record>
    <class name="WindowHandle"
           c:symbol-prefix="window_handle"
           c:type="HdyWindowHandle"
           parent="Gtk.EventBox"
           glib:type-name="HdyWindowHandle"
           glib:get-type="hdy_window_handle_get_type"
           glib:type-struct="WindowHandleClass">
      <source-position filename="../src/hdy-window-handle.h" line="22"/>
      <implements name="Atk.ImplementorIface"/>
      <implements name="Gtk.Buildable"/>
      <constructor name="new"
                   c:identifier="hdy_window_handle_new"
                   version="1.0">
        <doc xml:space="preserve"
             filename="../src/hdy-window-handle.c"
             line="70">Creates a new #HdyWindowHandle.</doc>
        <source-position filename="../src/hdy-window-handle.h" line="25"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hdy-window-handle.c"
               line="75">a newly created #HdyWindowHandle</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </return-value>
      </constructor>
    </class>
    <record name="WindowHandleClass"
            c:type="HdyWindowHandleClass"
            glib:is-gtype-struct-for="WindowHandle">
      <source-position filename="../src/hdy-window-handle.h" line="22"/>
      <field name="parent_class">
        <type name="Gtk.EventBoxClass" c:type="GtkEventBoxClass"/>
      </field>
    </record>
    <function name="ease_out_cubic"
              c:identifier="hdy_ease_out_cubic"
              version="0.0.11">
      <doc xml:space="preserve"
           filename="../src/hdy-animation.c"
           line="68">Computes the ease out for @t.</doc>
      <source-position filename="../src/hdy-animation.h" line="23"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-animation.c"
             line="74">the ease out for @t.</doc>
        <type name="gdouble" c:type="gdouble"/>
      </return-value>
      <parameters>
        <parameter name="t" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-animation.c"
               line="70">the term</doc>
          <type name="gdouble" c:type="gdouble"/>
        </parameter>
      </parameters>
    </function>
    <function name="enum_value_row_name"
              c:identifier="hdy_enum_value_row_name"
              version="0.0.6">
      <doc xml:space="preserve"
           filename="../src/hdy-combo-row.c"
           line="807">This is a default implementation of #HdyComboRowGetEnumValueNameFunc to be
used with hdy_combo_row_set_for_enum(). If the enumeration has a nickname, it
will return it, otherwise it will return its name.</doc>
      <source-position filename="../src/hdy-combo-row.h" line="109"/>
      <return-value transfer-ownership="full">
        <doc xml:space="preserve"
             filename="../src/hdy-combo-row.c"
             line="816">a newly allocated displayable name that represents @value</doc>
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.c"
               line="809">the value from the enum from which to get a name</doc>
          <type name="EnumValueObject" c:type="HdyEnumValueObject*"/>
        </parameter>
        <parameter name="user_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <doc xml:space="preserve"
               filename="../src/hdy-combo-row.c"
               line="810">unused user data</doc>
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_enable_animations"
              c:identifier="hdy_get_enable_animations"
              version="0.0.11">
      <doc xml:space="preserve"
           filename="../src/hdy-animation.c"
           line="21">Returns whether animations are enabled for that widget. This should be used
when implementing an animated widget to know whether to animate it or not.</doc>
      <source-position filename="../src/hdy-animation.h" line="20"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hdy-animation.c"
             line="28">%TRUE if animations are enabled for @widget.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="widget" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hdy-animation.c"
               line="23">a #GtkWidget</doc>
          <type name="Gtk.Widget" c:type="GtkWidget*"/>
        </parameter>
      </parameters>
    </function>
    <function name="init" c:identifier="hdy_init">
      <doc xml:space="preserve"
           filename="../src/hdy-main.c"
           line="176">Call this function just after initializing GTK, if you are using
#GtkApplication it means it must be called when the #GApplication::startup
signal is emitted. If libhandy has already been initialized, the function
will simply return.

This makes sure translations, types, themes, and icons for the Handy library
are set up properly.</doc>
      <source-position filename="../src/hdy-main.h" line="19"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
  </namespace>
</repository>
